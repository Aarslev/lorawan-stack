// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/tti/external_user.proto

package ttipb

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	ttnpb "go.thethings.network/lorawan-stack/v3/pkg/ttnpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ExternalUser struct {
	UserIDs              ttnpb.UserIdentifiers             `protobuf:"bytes,1,opt,name=user_ids,json=userIds,proto3" json:"user_ids"`
	ProviderIDs          AuthenticationProviderIdentifiers `protobuf:"bytes,2,opt,name=provider_ids,json=providerIds,proto3" json:"provider_ids"`
	CreatedAt            time.Time                         `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	UpdatedAt            time.Time                         `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at"`
	ExternalID           string                            `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ExternalUser) Reset()      { *m = ExternalUser{} }
func (*ExternalUser) ProtoMessage() {}
func (*ExternalUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab7cd6eaa3169b96, []int{0}
}
func (m *ExternalUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExternalUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExternalUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExternalUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalUser.Merge(m, src)
}
func (m *ExternalUser) XXX_Size() int {
	return m.Size()
}
func (m *ExternalUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalUser.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalUser proto.InternalMessageInfo

func (m *ExternalUser) GetUserIDs() ttnpb.UserIdentifiers {
	if m != nil {
		return m.UserIDs
	}
	return ttnpb.UserIdentifiers{}
}

func (m *ExternalUser) GetProviderIDs() AuthenticationProviderIdentifiers {
	if m != nil {
		return m.ProviderIDs
	}
	return AuthenticationProviderIdentifiers{}
}

func (m *ExternalUser) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *ExternalUser) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

func (m *ExternalUser) GetExternalID() string {
	if m != nil {
		return m.ExternalID
	}
	return ""
}

func init() {
	proto.RegisterType((*ExternalUser)(nil), "tti.lorawan.v3.ExternalUser")
	golang_proto.RegisterType((*ExternalUser)(nil), "tti.lorawan.v3.ExternalUser")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/tti/external_user.proto", fileDescriptor_ab7cd6eaa3169b96)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/tti/external_user.proto", fileDescriptor_ab7cd6eaa3169b96)
}

var fileDescriptor_ab7cd6eaa3169b96 = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xb1, 0x4f, 0xdb, 0x4c,
	0x18, 0xc6, 0xef, 0xe0, 0xe3, 0x03, 0x1c, 0x84, 0xaa, 0x2c, 0x45, 0xa9, 0xf4, 0x1a, 0xb5, 0x0b,
	0x1d, 0x72, 0x56, 0x9b, 0xbf, 0x20, 0x69, 0x3a, 0x64, 0xab, 0xd2, 0x76, 0xe9, 0x12, 0x5d, 0xe2,
	0xc3, 0x39, 0x25, 0xf1, 0xb9, 0xbe, 0xd7, 0x01, 0x36, 0x46, 0xd4, 0x89, 0x6e, 0x1d, 0xbb, 0x54,
	0x62, 0x64, 0x64, 0x64, 0xcc, 0xc8, 0xc8, 0x94, 0xe2, 0xf3, 0xc2, 0xc8, 0x88, 0x3a, 0x55, 0x76,
	0xec, 0x90, 0x94, 0x2e, 0xdd, 0xee, 0x95, 0x7e, 0xcf, 0xf3, 0xdc, 0xfb, 0xe8, 0xb5, 0x5e, 0x0e,
	0x55, 0xc8, 0x0f, 0xb8, 0x5f, 0xd5, 0xc8, 0x7b, 0x03, 0x87, 0x07, 0xd2, 0x41, 0x94, 0x8e, 0x38,
	0x44, 0x11, 0xfa, 0x7c, 0xd8, 0x89, 0xb4, 0x08, 0x59, 0x10, 0x2a, 0x54, 0xe5, 0x6d, 0x44, 0xc9,
	0x72, 0x9c, 0x8d, 0x6b, 0x95, 0xba, 0x27, 0xb1, 0x1f, 0x75, 0x59, 0x4f, 0x8d, 0x1c, 0xe1, 0x8f,
	0xd5, 0x51, 0x10, 0xaa, 0xc3, 0x23, 0x27, 0x83, 0x7b, 0x55, 0x4f, 0xf8, 0xd5, 0x31, 0x1f, 0x4a,
	0x97, 0xa3, 0x70, 0x1e, 0x3d, 0x66, 0x96, 0x95, 0xea, 0x82, 0x85, 0xa7, 0x3c, 0x35, 0x13, 0x77,
	0xa3, 0xfd, 0x6c, 0xca, 0x86, 0xec, 0x95, 0xe3, 0xb6, 0xa7, 0x94, 0x37, 0x14, 0x0f, 0x14, 0xca,
	0x91, 0xd0, 0xc8, 0x47, 0x41, 0x0e, 0xbc, 0x78, 0xbc, 0x8d, 0x74, 0x85, 0x8f, 0x72, 0x5f, 0x8a,
	0x50, 0xe7, 0x50, 0xed, 0xef, 0x2b, 0xf3, 0x08, 0xfb, 0x29, 0xda, 0xe3, 0x28, 0x95, 0xdf, 0x09,
	0x42, 0x35, 0x96, 0x6e, 0xb1, 0xfc, 0xf3, 0xaf, 0xab, 0xd6, 0xd6, 0xdb, 0xbc, 0x94, 0x8f, 0x5a,
	0x84, 0xe5, 0xf7, 0xd6, 0x46, 0xda, 0x4d, 0x47, 0xba, 0x7a, 0x87, 0xee, 0xd2, 0xbd, 0xd2, 0x6b,
	0x9b, 0x21, 0xfa, 0x0b, 0x05, 0xb1, 0x94, 0x6b, 0x3d, 0xc4, 0x37, 0x9e, 0xfe, 0x6a, 0xac, 0x7d,
	0xa1, 0x2b, 0x4f, 0xe8, 0x64, 0x6a, 0x13, 0x33, 0xb5, 0xd7, 0x33, 0xa0, 0xa9, 0xdb, 0xeb, 0x51,
	0x46, 0xea, 0xf2, 0x67, 0x6b, 0xab, 0xc8, 0xcd, 0x8c, 0x57, 0x32, 0xe3, 0x57, 0x6c, 0xb9, 0x79,
	0x56, 0x5f, 0xfa, 0xea, 0xbb, 0x5c, 0xb1, 0x18, 0xf5, 0xec, 0x8f, 0xa8, 0xd2, 0x1c, 0x6a, 0xea,
	0x76, 0x29, 0x98, 0x2b, 0x74, 0xf9, 0x8d, 0x65, 0xf5, 0x42, 0xc1, 0x51, 0xb8, 0x1d, 0x8e, 0x3b,
	0xab, 0x59, 0x60, 0x85, 0xcd, 0x8a, 0x66, 0x45, 0xd1, 0xec, 0x43, 0x51, 0x74, 0x63, 0x23, 0x75,
	0x3c, 0xfd, 0x69, 0xd3, 0xf6, 0x66, 0xae, 0xab, 0x63, 0x6a, 0x12, 0x05, 0x6e, 0x61, 0xf2, 0xdf,
	0xbf, 0x98, 0xe4, 0xba, 0x3a, 0x96, 0x1d, 0xab, 0x34, 0x3f, 0x3b, 0xe9, 0xee, 0xac, 0xed, 0xd2,
	0xbd, 0xcd, 0xc6, 0xb6, 0x99, 0xda, 0x56, 0x51, 0x7c, 0xab, 0xd9, 0xb6, 0x0a, 0xa4, 0xe5, 0x36,
	0x7e, 0xd0, 0x49, 0x0c, 0xf4, 0x2a, 0x06, 0x7a, 0x1d, 0x03, 0xb9, 0x89, 0x81, 0xdc, 0xc6, 0x40,
	0xee, 0x62, 0x20, 0xf7, 0x31, 0xd0, 0x63, 0x03, 0xf4, 0xc4, 0x00, 0x39, 0x33, 0x40, 0xcf, 0x0d,
	0x90, 0x0b, 0x03, 0xe4, 0xd2, 0x00, 0x99, 0x18, 0xa0, 0x57, 0x06, 0xe8, 0xb5, 0x01, 0x72, 0x63,
	0x80, 0xde, 0x1a, 0x20, 0x77, 0x06, 0xe8, 0xbd, 0x01, 0x72, 0x9c, 0x00, 0x39, 0x49, 0x80, 0x9e,
	0x26, 0x40, 0xbe, 0x25, 0x40, 0xbf, 0x27, 0x40, 0xce, 0x12, 0x20, 0xe7, 0x09, 0xd0, 0x8b, 0x04,
	0xe8, 0x65, 0x02, 0xf4, 0x93, 0xe3, 0x29, 0x86, 0x7d, 0x81, 0x7d, 0xe9, 0x7b, 0x9a, 0xf9, 0x02,
	0x0f, 0x54, 0x38, 0x70, 0x96, 0x8f, 0x6a, 0x5c, 0x73, 0x82, 0x81, 0x97, 0xde, 0x55, 0xd0, 0xed,
	0xfe, 0x9f, 0x35, 0x50, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xae, 0xf1, 0x5d, 0xd5, 0x6c, 0x03,
	0x00, 0x00,
}

func (this *ExternalUser) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExternalUser)
	if !ok {
		that2, ok := that.(ExternalUser)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UserIDs.Equal(&that1.UserIDs) {
		return false
	}
	if !this.ProviderIDs.Equal(&that1.ProviderIDs) {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.UpdatedAt.Equal(that1.UpdatedAt) {
		return false
	}
	if this.ExternalID != that1.ExternalID {
		return false
	}
	return true
}
func (m *ExternalUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExternalUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExternalUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExternalID) > 0 {
		i -= len(m.ExternalID)
		copy(dAtA[i:], m.ExternalID)
		i = encodeVarintExternalUser(dAtA, i, uint64(len(m.ExternalID)))
		i--
		dAtA[i] = 0x2a
	}
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintExternalUser(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintExternalUser(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.ProviderIDs.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintExternalUser(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.UserIDs.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintExternalUser(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintExternalUser(dAtA []byte, offset int, v uint64) int {
	offset -= sovExternalUser(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedExternalUser(r randyExternalUser, easy bool) *ExternalUser {
	this := &ExternalUser{}
	v1 := ttnpb.NewPopulatedUserIdentifiers(r, easy)
	this.UserIDs = *v1
	v2 := NewPopulatedAuthenticationProviderIdentifiers(r, easy)
	this.ProviderIDs = *v2
	v3 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.CreatedAt = *v3
	v4 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.UpdatedAt = *v4
	this.ExternalID = randStringExternalUser(r)
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyExternalUser interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneExternalUser(r randyExternalUser) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringExternalUser(r randyExternalUser) string {
	v5 := r.Intn(100)
	tmps := make([]rune, v5)
	for i := 0; i < v5; i++ {
		tmps[i] = randUTF8RuneExternalUser(r)
	}
	return string(tmps)
}
func randUnrecognizedExternalUser(r randyExternalUser, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldExternalUser(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldExternalUser(dAtA []byte, r randyExternalUser, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateExternalUser(dAtA, uint64(key))
		v6 := r.Int63()
		if r.Intn(2) == 0 {
			v6 *= -1
		}
		dAtA = encodeVarintPopulateExternalUser(dAtA, uint64(v6))
	case 1:
		dAtA = encodeVarintPopulateExternalUser(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateExternalUser(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateExternalUser(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateExternalUser(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateExternalUser(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(v&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *ExternalUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.UserIDs.Size()
	n += 1 + l + sovExternalUser(uint64(l))
	l = m.ProviderIDs.Size()
	n += 1 + l + sovExternalUser(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovExternalUser(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovExternalUser(uint64(l))
	l = len(m.ExternalID)
	if l > 0 {
		n += 1 + l + sovExternalUser(uint64(l))
	}
	return n
}

func sovExternalUser(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozExternalUser(x uint64) (n int) {
	return sovExternalUser((x << 1) ^ uint64((int64(x) >> 63)))
}
func (this *ExternalUser) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ExternalUser{`,
		`UserIDs:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.UserIDs), "UserIdentifiers", "ttnpb.UserIdentifiers", 1), `&`, ``, 1) + `,`,
		`ProviderIDs:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ProviderIDs), "AuthenticationProviderIdentifiers", "AuthenticationProviderIdentifiers", 1), `&`, ``, 1) + `,`,
		`CreatedAt:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`UpdatedAt:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.UpdatedAt), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`ExternalID:` + fmt.Sprintf("%v", this.ExternalID) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringExternalUser(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ExternalUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExternalUser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExternalUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExternalUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExternalUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExternalUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UserIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExternalUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExternalUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ProviderIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExternalUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExternalUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExternalUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExternalUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExternalUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExternalUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExternalID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExternalUser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExternalUser
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExternalUser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipExternalUser(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowExternalUser
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExternalUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthExternalUser
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupExternalUser
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthExternalUser
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthExternalUser        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowExternalUser          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupExternalUser = fmt.Errorf("proto: unexpected end of group")
)
