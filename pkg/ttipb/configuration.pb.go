// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/tti/configuration.proto

package ttipb

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	go_thethings_network_lorawan_stack_v3_pkg_types "go.thethings.network/lorawan-stack/v3/pkg/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Configuration struct {
	// Default cluster configuration.
	DefaultCluster       *Configuration_Cluster `protobuf:"bytes,2,opt,name=default_cluster,json=defaultCluster,proto3" json:"default_cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Configuration) Reset()      { *m = Configuration{} }
func (*Configuration) ProtoMessage() {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0}
}
func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return m.Size()
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetDefaultCluster() *Configuration_Cluster {
	if m != nil {
		return m.DefaultCluster
	}
	return nil
}

type Configuration_UI struct {
	BrandingBaseURL      string   `protobuf:"bytes,1,opt,name=branding_base_url,json=brandingBaseUrl,proto3" json:"branding_base_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Configuration_UI) Reset()      { *m = Configuration_UI{} }
func (*Configuration_UI) ProtoMessage() {}
func (*Configuration_UI) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 0}
}
func (m *Configuration_UI) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_UI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_UI.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_UI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_UI.Merge(m, src)
}
func (m *Configuration_UI) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_UI) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_UI.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_UI proto.InternalMessageInfo

func (m *Configuration_UI) GetBrandingBaseURL() string {
	if m != nil {
		return m.BrandingBaseURL
	}
	return ""
}

type Configuration_Cluster struct {
	UI *Configuration_UI `protobuf:"bytes,1,opt,name=ui,proto3" json:"ui,omitempty"`
	// Identity Server configuration.
	IS                   *Configuration_Cluster_IdentityServer `protobuf:"bytes,2,opt,name=is,proto3" json:"is,omitempty"`
	NS                   *Configuration_Cluster_NetworkServer  `protobuf:"bytes,4,opt,name=ns,proto3" json:"ns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Configuration_Cluster) Reset()      { *m = Configuration_Cluster{} }
func (*Configuration_Cluster) ProtoMessage() {}
func (*Configuration_Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1}
}
func (m *Configuration_Cluster) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster.Merge(m, src)
}
func (m *Configuration_Cluster) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster proto.InternalMessageInfo

func (m *Configuration_Cluster) GetUI() *Configuration_UI {
	if m != nil {
		return m.UI
	}
	return nil
}

func (m *Configuration_Cluster) GetIS() *Configuration_Cluster_IdentityServer {
	if m != nil {
		return m.IS
	}
	return nil
}

func (m *Configuration_Cluster) GetNS() *Configuration_Cluster_NetworkServer {
	if m != nil {
		return m.NS
	}
	return nil
}

type Configuration_Cluster_IdentityServer struct {
	UserRegistration     *Configuration_Cluster_IdentityServer_UserRegistration `protobuf:"bytes,3,opt,name=user_registration,json=userRegistration,proto3" json:"user_registration,omitempty"`
	ProfilePicture       *Configuration_Cluster_IdentityServer_ProfilePicture   `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	EndDevicePicture     *Configuration_Cluster_IdentityServer_EndDevicePicture `protobuf:"bytes,5,opt,name=end_device_picture,json=endDevicePicture,proto3" json:"end_device_picture,omitempty"`
	UserRights           *Configuration_Cluster_IdentityServer_UserRights       `protobuf:"bytes,6,opt,name=user_rights,json=userRights,proto3" json:"user_rights,omitempty"`
	OAuth                *Configuration_Cluster_IdentityServer_OAuth            `protobuf:"bytes,7,opt,name=oauth,proto3" json:"oauth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer) Reset()      { *m = Configuration_Cluster_IdentityServer{} }
func (*Configuration_Cluster_IdentityServer) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0}
}
func (m *Configuration_Cluster_IdentityServer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer) GetUserRegistration() *Configuration_Cluster_IdentityServer_UserRegistration {
	if m != nil {
		return m.UserRegistration
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer) GetProfilePicture() *Configuration_Cluster_IdentityServer_ProfilePicture {
	if m != nil {
		return m.ProfilePicture
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer) GetEndDevicePicture() *Configuration_Cluster_IdentityServer_EndDevicePicture {
	if m != nil {
		return m.EndDevicePicture
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer) GetUserRights() *Configuration_Cluster_IdentityServer_UserRights {
	if m != nil {
		return m.UserRights
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer) GetOAuth() *Configuration_Cluster_IdentityServer_OAuth {
	if m != nil {
		return m.OAuth
	}
	return nil
}

type Configuration_Cluster_IdentityServer_UserRegistration struct {
	Invitation            *Configuration_Cluster_IdentityServer_UserRegistration_Invitation            `protobuf:"bytes,1,opt,name=invitation,proto3" json:"invitation,omitempty"`
	ContactInfoValidation *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation `protobuf:"bytes,2,opt,name=contact_info_validation,json=contactInfoValidation,proto3" json:"contact_info_validation,omitempty"`
	AdminApproval         *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval         `protobuf:"bytes,3,opt,name=admin_approval,json=adminApproval,proto3" json:"admin_approval,omitempty"`
	PasswordRequirements  *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements  `protobuf:"bytes,4,opt,name=password_requirements,json=passwordRequirements,proto3" json:"password_requirements,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                                                     `json:"-"`
	XXX_sizecache         int32                                                                        `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) Reset() {
	*m = Configuration_Cluster_IdentityServer_UserRegistration{}
}
func (*Configuration_Cluster_IdentityServer_UserRegistration) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_UserRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 0}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_UserRegistration) GetInvitation() *Configuration_Cluster_IdentityServer_UserRegistration_Invitation {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) GetContactInfoValidation() *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation {
	if m != nil {
		return m.ContactInfoValidation
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) GetAdminApproval() *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval {
	if m != nil {
		return m.AdminApproval
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) GetPasswordRequirements() *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements {
	if m != nil {
		return m.PasswordRequirements
	}
	return nil
}

type Configuration_Cluster_IdentityServer_UserRegistration_Invitation struct {
	Required             *types.BoolValue `protobuf:"bytes,1,opt,name=required,proto3" json:"required,omitempty"`
	TokenTTL             *time.Duration   `protobuf:"bytes,2,opt,name=token_ttl,json=tokenTtl,proto3,stdduration" json:"token_ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) Reset() {
	*m = Configuration_Cluster_IdentityServer_UserRegistration_Invitation{}
}
func (*Configuration_Cluster_IdentityServer_UserRegistration_Invitation) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_UserRegistration_Invitation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 0, 0}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_Invitation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_Invitation.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_Invitation.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_Invitation proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) GetRequired() *types.BoolValue {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) GetTokenTTL() *time.Duration {
	if m != nil {
		return m.TokenTTL
	}
	return nil
}

type Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation struct {
	Required             *types.BoolValue `protobuf:"bytes,1,opt,name=required,proto3" json:"required,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) Reset() {
	*m = Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation{}
}
func (*Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 0, 1}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) GetRequired() *types.BoolValue {
	if m != nil {
		return m.Required
	}
	return nil
}

type Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval struct {
	Required             *types.BoolValue `protobuf:"bytes,1,opt,name=required,proto3" json:"required,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) Reset() {
	*m = Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval{}
}
func (*Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 0, 2}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) GetRequired() *types.BoolValue {
	if m != nil {
		return m.Required
	}
	return nil
}

type Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements struct {
	MinLength            *types.UInt32Value `protobuf:"bytes,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength            *types.UInt32Value `protobuf:"bytes,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	MinUppercase         *types.UInt32Value `protobuf:"bytes,3,opt,name=min_uppercase,json=minUppercase,proto3" json:"min_uppercase,omitempty"`
	MinDigits            *types.UInt32Value `protobuf:"bytes,4,opt,name=min_digits,json=minDigits,proto3" json:"min_digits,omitempty"`
	MinSpecial           *types.UInt32Value `protobuf:"bytes,5,opt,name=min_special,json=minSpecial,proto3" json:"min_special,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) Reset() {
	*m = Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements{}
}
func (*Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 0, 3}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) GetMinLength() *types.UInt32Value {
	if m != nil {
		return m.MinLength
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) GetMaxLength() *types.UInt32Value {
	if m != nil {
		return m.MaxLength
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) GetMinUppercase() *types.UInt32Value {
	if m != nil {
		return m.MinUppercase
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) GetMinDigits() *types.UInt32Value {
	if m != nil {
		return m.MinDigits
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) GetMinSpecial() *types.UInt32Value {
	if m != nil {
		return m.MinSpecial
	}
	return nil
}

type Configuration_Cluster_IdentityServer_ProfilePicture struct {
	DisableUpload        *types.BoolValue `protobuf:"bytes,1,opt,name=disable_upload,json=disableUpload,proto3" json:"disable_upload,omitempty"`
	UseGravatar          *types.BoolValue `protobuf:"bytes,2,opt,name=use_gravatar,json=useGravatar,proto3" json:"use_gravatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) Reset() {
	*m = Configuration_Cluster_IdentityServer_ProfilePicture{}
}
func (*Configuration_Cluster_IdentityServer_ProfilePicture) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_ProfilePicture) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 1}
}
func (m *Configuration_Cluster_IdentityServer_ProfilePicture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_ProfilePicture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_ProfilePicture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_ProfilePicture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_ProfilePicture.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_ProfilePicture) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_ProfilePicture) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_ProfilePicture.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_ProfilePicture proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) GetDisableUpload() *types.BoolValue {
	if m != nil {
		return m.DisableUpload
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) GetUseGravatar() *types.BoolValue {
	if m != nil {
		return m.UseGravatar
	}
	return nil
}

type Configuration_Cluster_IdentityServer_EndDevicePicture struct {
	DisableUpload        *types.BoolValue `protobuf:"bytes,1,opt,name=disable_upload,json=disableUpload,proto3" json:"disable_upload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) Reset() {
	*m = Configuration_Cluster_IdentityServer_EndDevicePicture{}
}
func (*Configuration_Cluster_IdentityServer_EndDevicePicture) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_EndDevicePicture) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 2}
}
func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_EndDevicePicture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_EndDevicePicture.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_EndDevicePicture.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_EndDevicePicture proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) GetDisableUpload() *types.BoolValue {
	if m != nil {
		return m.DisableUpload
	}
	return nil
}

type Configuration_Cluster_IdentityServer_UserRights struct {
	CreateApplications   *types.BoolValue `protobuf:"bytes,1,opt,name=create_applications,json=createApplications,proto3" json:"create_applications,omitempty"`
	CreateClients        *types.BoolValue `protobuf:"bytes,2,opt,name=create_clients,json=createClients,proto3" json:"create_clients,omitempty"`
	CreateGateways       *types.BoolValue `protobuf:"bytes,3,opt,name=create_gateways,json=createGateways,proto3" json:"create_gateways,omitempty"`
	CreateOrganizations  *types.BoolValue `protobuf:"bytes,4,opt,name=create_organizations,json=createOrganizations,proto3" json:"create_organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_UserRights) Reset() {
	*m = Configuration_Cluster_IdentityServer_UserRights{}
}
func (*Configuration_Cluster_IdentityServer_UserRights) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_UserRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 3}
}
func (m *Configuration_Cluster_IdentityServer_UserRights) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_UserRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRights.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_UserRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRights.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_UserRights) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_UserRights) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRights.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_UserRights proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_UserRights) GetCreateApplications() *types.BoolValue {
	if m != nil {
		return m.CreateApplications
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRights) GetCreateClients() *types.BoolValue {
	if m != nil {
		return m.CreateClients
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRights) GetCreateGateways() *types.BoolValue {
	if m != nil {
		return m.CreateGateways
	}
	return nil
}

func (m *Configuration_Cluster_IdentityServer_UserRights) GetCreateOrganizations() *types.BoolValue {
	if m != nil {
		return m.CreateOrganizations
	}
	return nil
}

type Configuration_Cluster_IdentityServer_OAuth struct {
	Providers            *Configuration_Cluster_IdentityServer_OAuth_AuthProviders `protobuf:"bytes,1,opt,name=providers,proto3" json:"providers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_OAuth) Reset() {
	*m = Configuration_Cluster_IdentityServer_OAuth{}
}
func (*Configuration_Cluster_IdentityServer_OAuth) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_OAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 4}
}
func (m *Configuration_Cluster_IdentityServer_OAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_OAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_OAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_OAuth) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_OAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_OAuth) GetProviders() *Configuration_Cluster_IdentityServer_OAuth_AuthProviders {
	if m != nil {
		return m.Providers
	}
	return nil
}

type Configuration_Cluster_IdentityServer_OAuth_AuthProviders struct {
	OIDC                 *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect `protobuf:"bytes,1,opt,name=oidc,proto3" json:"oidc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                `json:"-"`
	XXX_sizecache        int32                                                                   `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) Reset() {
	*m = Configuration_Cluster_IdentityServer_OAuth_AuthProviders{}
}
func (*Configuration_Cluster_IdentityServer_OAuth_AuthProviders) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_OAuth_AuthProviders) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 4, 0}
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) GetOIDC() *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect {
	if m != nil {
		return m.OIDC
	}
	return nil
}

type Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AllowRegistrations   bool     `protobuf:"varint,2,opt,name=allow_registrations,json=allowRegistrations,proto3" json:"allow_registrations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) Reset() {
	*m = Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared{}
}
func (*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 4, 0, 0}
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) GetAllowRegistrations() bool {
	if m != nil {
		return m.AllowRegistrations
	}
	return false
}

type Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect struct {
	Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared `protobuf:"bytes,1,opt,name=shared,proto3,embedded=shared" json:"shared"`
	ClientID                                                        string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret                                                    string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ProviderURL                                                     string   `protobuf:"bytes,4,opt,name=provider_url,json=providerUrl,proto3" json:"provider_url,omitempty"`
	XXX_NoUnkeyedLiteral                                            struct{} `json:"-"`
	XXX_sizecache                                                   int32    `json:"-"`
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) Reset() {
	*m = Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect{}
}
func (*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) ProtoMessage() {}
func (*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 0, 4, 0, 1}
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect.Merge(m, src)
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect proto.InternalMessageInfo

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) GetProviderURL() string {
	if m != nil {
		return m.ProviderURL
	}
	return ""
}

type Configuration_Cluster_NetworkServer struct {
	DevAddrPrefixes      []go_thethings_network_lorawan_stack_v3_pkg_types.DevAddrPrefix `protobuf:"bytes,1,rep,name=dev_addr_prefixes,json=devAddrPrefixes,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.DevAddrPrefix" json:"dev_addr_prefixes"`
	DeduplicationWindow  *time.Duration                                                  `protobuf:"bytes,2,opt,name=deduplication_window,json=deduplicationWindow,proto3,stdduration" json:"deduplication_window,omitempty"`
	CooldownWindow       *time.Duration                                                  `protobuf:"bytes,3,opt,name=cooldown_window,json=cooldownWindow,proto3,stdduration" json:"cooldown_window,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                        `json:"-"`
	XXX_sizecache        int32                                                           `json:"-"`
}

func (m *Configuration_Cluster_NetworkServer) Reset()      { *m = Configuration_Cluster_NetworkServer{} }
func (*Configuration_Cluster_NetworkServer) ProtoMessage() {}
func (*Configuration_Cluster_NetworkServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc10cab306641c7, []int{0, 1, 1}
}
func (m *Configuration_Cluster_NetworkServer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration_Cluster_NetworkServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration_Cluster_NetworkServer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration_Cluster_NetworkServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration_Cluster_NetworkServer.Merge(m, src)
}
func (m *Configuration_Cluster_NetworkServer) XXX_Size() int {
	return m.Size()
}
func (m *Configuration_Cluster_NetworkServer) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration_Cluster_NetworkServer.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration_Cluster_NetworkServer proto.InternalMessageInfo

func (m *Configuration_Cluster_NetworkServer) GetDeduplicationWindow() *time.Duration {
	if m != nil {
		return m.DeduplicationWindow
	}
	return nil
}

func (m *Configuration_Cluster_NetworkServer) GetCooldownWindow() *time.Duration {
	if m != nil {
		return m.CooldownWindow
	}
	return nil
}

func init() {
	proto.RegisterType((*Configuration)(nil), "tti.lorawan.v3.Configuration")
	golang_proto.RegisterType((*Configuration)(nil), "tti.lorawan.v3.Configuration")
	proto.RegisterType((*Configuration_UI)(nil), "tti.lorawan.v3.Configuration.UI")
	golang_proto.RegisterType((*Configuration_UI)(nil), "tti.lorawan.v3.Configuration.UI")
	proto.RegisterType((*Configuration_Cluster)(nil), "tti.lorawan.v3.Configuration.Cluster")
	golang_proto.RegisterType((*Configuration_Cluster)(nil), "tti.lorawan.v3.Configuration.Cluster")
	proto.RegisterType((*Configuration_Cluster_IdentityServer)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_Invitation)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.Invitation")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_Invitation)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.Invitation")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.ContactInfoValidation")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.ContactInfoValidation")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.AdminApproval")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.AdminApproval")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.PasswordRequirements")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRegistration.PasswordRequirements")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_ProfilePicture)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.ProfilePicture")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_ProfilePicture)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.ProfilePicture")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_EndDevicePicture)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.EndDevicePicture")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_EndDevicePicture)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.EndDevicePicture")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRights)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRights")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_UserRights)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.UserRights")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth_AuthProviders)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth.AuthProviders")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth_AuthProviders)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth.AuthProviders")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth.AuthProviders.Shared")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth.AuthProviders.Shared")
	proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth.AuthProviders.OpenIDConnect")
	golang_proto.RegisterType((*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect)(nil), "tti.lorawan.v3.Configuration.Cluster.IdentityServer.OAuth.AuthProviders.OpenIDConnect")
	proto.RegisterType((*Configuration_Cluster_NetworkServer)(nil), "tti.lorawan.v3.Configuration.Cluster.NetworkServer")
	golang_proto.RegisterType((*Configuration_Cluster_NetworkServer)(nil), "tti.lorawan.v3.Configuration.Cluster.NetworkServer")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/tti/configuration.proto", fileDescriptor_1cc10cab306641c7)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/tti/configuration.proto", fileDescriptor_1cc10cab306641c7)
}

var fileDescriptor_1cc10cab306641c7 = []byte{
	// 1450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x3f, 0x6c, 0xdb, 0xcc,
	0x15, 0x27, 0x65, 0xd9, 0x96, 0xce, 0xd6, 0x9f, 0x9c, 0x9d, 0xd6, 0x25, 0x02, 0x2a, 0x28, 0x50,
	0x20, 0x19, 0x42, 0x01, 0x76, 0x5b, 0x14, 0x2d, 0x82, 0xc0, 0x92, 0x8d, 0x44, 0x8e, 0x13, 0x1b,
	0xb4, 0x95, 0x02, 0xc9, 0xc0, 0x9e, 0xc8, 0x13, 0x75, 0x30, 0xcd, 0x63, 0xc8, 0xa3, 0x94, 0x64,
	0xca, 0x98, 0xa9, 0x2d, 0xda, 0x25, 0x43, 0x87, 0x2c, 0x01, 0x32, 0x66, 0xcc, 0x98, 0x31, 0x5b,
	0xd3, 0x2d, 0xe8, 0xa0, 0x46, 0xd4, 0x92, 0xa5, 0xf8, 0x32, 0x66, 0xfc, 0xc0, 0xbb, 0x93, 0x2d,
	0x39, 0x86, 0xed, 0xcf, 0x9f, 0x17, 0x82, 0x77, 0xf7, 0x7e, 0xbf, 0xdf, 0x7b, 0xf7, 0xde, 0xdd,
	0x23, 0xc1, 0x75, 0x8f, 0x86, 0xa8, 0x87, 0xfc, 0x1b, 0x11, 0x43, 0xf6, 0x5e, 0x15, 0x05, 0xa4,
	0xca, 0x18, 0xa9, 0xda, 0xd4, 0x6f, 0x13, 0x37, 0x0e, 0x11, 0x23, 0xd4, 0x37, 0x82, 0x90, 0x32,
	0x0a, 0x8b, 0x8c, 0x11, 0x43, 0x9a, 0x1b, 0xdd, 0x15, 0xed, 0x86, 0x4b, 0x58, 0x27, 0x6e, 0x19,
	0x36, 0xdd, 0xaf, 0xba, 0xd4, 0xa5, 0x55, 0x6e, 0xd6, 0x8a, 0xdb, 0x7c, 0xc4, 0x07, 0xfc, 0x4d,
	0xc0, 0x35, 0xdd, 0xa5, 0xd4, 0xf5, 0xf0, 0xa1, 0x95, 0x33, 0x41, 0xff, 0xfd, 0x7a, 0x2f, 0x44,
	0x41, 0x80, 0xc3, 0x48, 0xac, 0xff, 0xfa, 0x5f, 0x57, 0x40, 0xa1, 0x3e, 0xee, 0x16, 0xbc, 0x0f,
	0x4a, 0x0e, 0x6e, 0xa3, 0xd8, 0x63, 0x96, 0xed, 0xc5, 0x11, 0xc3, 0xe1, 0x52, 0xe6, 0xaa, 0x7a,
	0x6d, 0x6e, 0xf9, 0x37, 0xc6, 0xa4, 0xab, 0xc6, 0x04, 0xce, 0xa8, 0x0b, 0x63, 0xb3, 0x28, 0xd1,
	0x72, 0xac, 0xad, 0x83, 0x4c, 0xb3, 0x01, 0x6f, 0x81, 0x4b, 0xad, 0x10, 0xf9, 0x0e, 0xf1, 0x5d,
	0xab, 0x85, 0x22, 0x6c, 0xc5, 0xa1, 0xb7, 0xa4, 0x5e, 0x55, 0xaf, 0xe5, 0x6b, 0x0b, 0x49, 0xbf,
	0x52, 0xaa, 0xc9, 0xc5, 0x1a, 0x8a, 0x70, 0xd3, 0xdc, 0x34, 0x4b, 0xad, 0xf1, 0x89, 0xd0, 0xd3,
	0xfe, 0xaf, 0x81, 0x59, 0x49, 0x09, 0xff, 0x00, 0x32, 0x31, 0xe1, 0xe8, 0xb9, 0xe5, 0xab, 0x27,
	0x7b, 0xd5, 0x6c, 0xd4, 0x66, 0x92, 0x7e, 0x25, 0xd3, 0x6c, 0x98, 0x99, 0x98, 0xc0, 0x4d, 0x90,
	0x21, 0x91, 0x8c, 0xe7, 0xb7, 0x67, 0x8a, 0xc7, 0x68, 0x38, 0xd8, 0x67, 0x84, 0x3d, 0xdd, 0xc1,
	0x61, 0x17, 0x87, 0x82, 0xad, 0xb1, 0x63, 0x66, 0x48, 0x04, 0xef, 0x82, 0x8c, 0x1f, 0x2d, 0x65,
	0x39, 0xdb, 0xca, 0xd9, 0xd8, 0xee, 0x63, 0xd6, 0xa3, 0xe1, 0xde, 0x38, 0xd9, 0xfd, 0x1d, 0x33,
	0xe3, 0x47, 0xda, 0x7f, 0x7e, 0x01, 0x8a, 0x93, 0x5a, 0x30, 0x04, 0x97, 0xe2, 0x08, 0x87, 0x56,
	0x88, 0x5d, 0x12, 0x31, 0xc1, 0xb4, 0x34, 0xc5, 0xe5, 0xd6, 0xcf, 0xe3, 0xbc, 0xd1, 0x8c, 0x70,
	0x68, 0x8e, 0x91, 0x99, 0xe5, 0xf8, 0xc8, 0x0c, 0xf4, 0x40, 0x29, 0x08, 0x69, 0x9b, 0x78, 0xd8,
	0x0a, 0x88, 0xcd, 0xe2, 0x10, 0xcb, 0x00, 0xeb, 0xe7, 0x52, 0xdc, 0x16, 0x5c, 0xdb, 0x82, 0xca,
	0x2c, 0x06, 0x13, 0x63, 0x18, 0x01, 0x88, 0x7d, 0xc7, 0x72, 0x70, 0x97, 0xd8, 0x87, 0x82, 0xd3,
	0x3f, 0x23, 0xc4, 0x75, 0xdf, 0x59, 0xe3, 0x6c, 0x23, 0xc9, 0x32, 0x3e, 0x32, 0x03, 0xff, 0x02,
	0xe6, 0xc4, 0xb6, 0x12, 0xb7, 0xc3, 0xa2, 0xa5, 0x19, 0xae, 0x76, 0xeb, 0xfc, 0x1b, 0xca, 0x69,
	0x4c, 0x10, 0x1f, 0xbc, 0xc3, 0x47, 0x60, 0x9a, 0xa2, 0x98, 0x75, 0x96, 0x66, 0x39, 0xf7, 0x1f,
	0xcf, 0xc5, 0xbd, 0xb5, 0x1a, 0xb3, 0x4e, 0x2d, 0x9f, 0xf4, 0x2b, 0xd3, 0xfc, 0xd5, 0x14, 0x9c,
	0xda, 0xeb, 0x3c, 0x28, 0x1f, 0x4d, 0x24, 0x0c, 0x00, 0x20, 0x7e, 0x97, 0x30, 0x51, 0x23, 0xe2,
	0x68, 0x6c, 0x5f, 0x48, 0x8d, 0x18, 0x8d, 0x03, 0x5e, 0x73, 0x4c, 0x03, 0xfe, 0x53, 0x05, 0xbf,
	0xb4, 0xa9, 0xcf, 0x90, 0xcd, 0x2c, 0xe2, 0xb7, 0xa9, 0xd5, 0x45, 0x1e, 0x71, 0x84, 0xbe, 0x38,
	0x60, 0x8f, 0x2e, 0x46, 0xbf, 0x2e, 0x44, 0x1a, 0x7e, 0x9b, 0x3e, 0x38, 0x90, 0x30, 0x2f, 0xdb,
	0xc7, 0x4d, 0xc3, 0x67, 0xa0, 0x88, 0x9c, 0x7d, 0xe2, 0x5b, 0x28, 0x08, 0x42, 0xda, 0x45, 0x9e,
	0x3c, 0x2f, 0x3b, 0x17, 0xe3, 0xcb, 0x6a, 0xca, 0xbd, 0x2a, 0xa9, 0xcd, 0x02, 0x1a, 0x1f, 0xc2,
	0xbf, 0xa9, 0xe0, 0x72, 0x80, 0xa2, 0xa8, 0x47, 0x43, 0xc7, 0x0a, 0xf1, 0xe3, 0x98, 0x84, 0x78,
	0x1f, 0xfb, 0x6c, 0x74, 0x45, 0x3c, 0xbc, 0x18, 0x1f, 0xb6, 0xa5, 0x84, 0x39, 0xa6, 0x60, 0x2e,
	0x06, 0xc7, 0xcc, 0x6a, 0x7f, 0x55, 0x01, 0x38, 0x4c, 0x1f, 0xfc, 0x3d, 0xc8, 0x49, 0xb7, 0x1c,
	0x59, 0x22, 0x9a, 0x21, 0xfa, 0x83, 0x31, 0xea, 0x0f, 0x46, 0x8d, 0x52, 0xef, 0x01, 0xf2, 0x62,
	0x6c, 0x1e, 0xd8, 0xc2, 0x3b, 0x20, 0xcf, 0xe8, 0x1e, 0xf6, 0x2d, 0xc6, 0x3c, 0x99, 0xdb, 0x5f,
	0x7d, 0x07, 0x5c, 0x93, 0x71, 0xd4, 0xca, 0x49, 0xbf, 0x92, 0xdb, 0x4d, 0xed, 0x77, 0x77, 0x37,
	0x5f, 0xfe, 0xaf, 0xa2, 0x9a, 0x39, 0x8e, 0xde, 0x65, 0x9e, 0xb6, 0x05, 0x2e, 0x1f, 0x9b, 0xce,
	0xf3, 0xba, 0xa6, 0xdd, 0x06, 0x85, 0x89, 0x9c, 0x9c, 0x9b, 0xe8, 0xdf, 0x19, 0xb0, 0x78, 0xdc,
	0xce, 0xc2, 0x3f, 0x01, 0x90, 0xd6, 0x93, 0x87, 0x7d, 0x97, 0x75, 0x24, 0xe5, 0x95, 0xef, 0x28,
	0x9b, 0x0d, 0x9f, 0xad, 0x2c, 0x0b, 0xd2, 0xfc, 0x3e, 0xf1, 0x37, 0xb9, 0x39, 0x07, 0xa3, 0x27,
	0x23, 0x70, 0xe6, 0x4c, 0x60, 0xf4, 0x44, 0x82, 0x57, 0x41, 0x21, 0x55, 0x8e, 0xd3, 0x7e, 0x6d,
	0xa3, 0x08, 0xcb, 0x52, 0x3e, 0x19, 0x3f, 0xbf, 0x4f, 0xfc, 0xe6, 0x08, 0x31, 0x72, 0xde, 0x21,
	0x2e, 0x39, 0x28, 0xc3, 0xd3, 0x9d, 0x5f, 0xe3, 0xe6, 0xf0, 0x26, 0x98, 0x4b, 0xc1, 0x51, 0x80,
	0x6d, 0x82, 0x3c, 0x79, 0x2b, 0x9f, 0x8c, 0x4e, 0xd5, 0x76, 0x84, 0xbd, 0xf6, 0x0f, 0x15, 0x14,
	0x27, 0xaf, 0x7f, 0xb8, 0x0a, 0x8a, 0x0e, 0x89, 0x50, 0xcb, 0xc3, 0x56, 0x1c, 0x78, 0x14, 0x9d,
	0x25, 0x45, 0x05, 0x89, 0x68, 0x72, 0x00, 0xbc, 0x09, 0xe6, 0xe3, 0x08, 0x5b, 0x6e, 0x88, 0xba,
	0x88, 0xa1, 0xd1, 0xb7, 0xc9, 0x49, 0x04, 0xe9, 0x65, 0x7f, 0x5b, 0x9a, 0x6b, 0x4d, 0x50, 0x3e,
	0xda, 0x21, 0x2e, 0xc0, 0x2b, 0xed, 0x6d, 0x06, 0x80, 0xc3, 0x5e, 0x00, 0xef, 0x82, 0x05, 0x3b,
	0xc4, 0x88, 0xe1, 0xf4, 0x1a, 0xf2, 0x88, 0xcd, 0x6b, 0x3c, 0x3a, 0x03, 0x2d, 0x14, 0xb0, 0xd5,
	0x31, 0x54, 0xea, 0x9e, 0x24, 0xb3, 0x3d, 0xc2, 0xaf, 0x93, 0xd3, 0x63, 0x2e, 0x08, 0x44, 0x5d,
	0x00, 0x60, 0x1d, 0x94, 0x24, 0x85, 0x8b, 0x18, 0xee, 0xa1, 0xa7, 0x91, 0xac, 0xa5, 0x93, 0x38,
	0xa4, 0xea, 0x6d, 0x89, 0x80, 0xf7, 0xc0, 0xa2, 0x24, 0xa1, 0xa1, 0x8b, 0x7c, 0xf2, 0x4c, 0x46,
	0x95, 0x3d, 0x95, 0x49, 0x6e, 0xc6, 0xd6, 0x38, 0x4c, 0x1b, 0x64, 0x81, 0xe8, 0x6b, 0xb0, 0x0d,
	0xf2, 0xe9, 0xe1, 0x25, 0x0e, 0x0e, 0x47, 0x7b, 0x74, 0xe7, 0xfc, 0x1d, 0xd3, 0x48, 0x1f, 0xdb,
	0x23, 0x3e, 0xf3, 0x90, 0x5a, 0xfb, 0x61, 0x0a, 0x14, 0x26, 0x16, 0x21, 0x03, 0x59, 0x4a, 0x1c,
	0x5b, 0x8a, 0x3e, 0xb8, 0x28, 0x51, 0x63, 0x2b, 0xc0, 0x7e, 0x63, 0xad, 0x4e, 0x7d, 0x1f, 0xdb,
	0xac, 0x96, 0x4b, 0xfa, 0x95, 0xec, 0x56, 0x63, 0xad, 0x6e, 0x72, 0x35, 0xed, 0x1e, 0x98, 0xd9,
	0xe9, 0xa0, 0xf4, 0x62, 0x85, 0x20, 0xeb, 0xa3, 0x7d, 0x2c, 0x3e, 0x84, 0x4d, 0xfe, 0x0e, 0xab,
	0x60, 0x01, 0x79, 0x1e, 0xed, 0x4d, 0x7c, 0xf5, 0x89, 0x9c, 0xe7, 0x4c, 0xc8, 0x97, 0xc6, 0xdb,
	0x41, 0xa4, 0xbd, 0xcc, 0x80, 0xc2, 0x84, 0x20, 0x7c, 0x0c, 0x66, 0x22, 0x2e, 0x20, 0x03, 0xdb,
	0xba, 0xb0, 0xc0, 0x84, 0xdf, 0xb5, 0xdc, 0x87, 0x7e, 0x45, 0xf9, 0xd8, 0xaf, 0xa8, 0xa6, 0x14,
	0x82, 0xd7, 0x41, 0x5e, 0x54, 0xa7, 0x45, 0x1c, 0xee, 0x6b, 0xbe, 0x36, 0x9f, 0xf6, 0x01, 0x51,
	0x81, 0x8d, 0x35, 0x33, 0x27, 0x96, 0x1b, 0x0e, 0xfc, 0x1d, 0x28, 0x48, 0xd3, 0x08, 0xdb, 0x21,
	0x66, 0xbc, 0x14, 0xf3, 0xbc, 0x6d, 0xcc, 0x0b, 0xf3, 0x1d, 0x3e, 0x6f, 0xce, 0xdb, 0x63, 0x23,
	0xb8, 0x0c, 0xe6, 0x47, 0xa9, 0xe4, 0x3f, 0x0f, 0x59, 0x8e, 0x2a, 0x25, 0xfd, 0xca, 0xdc, 0xc8,
	0xbf, 0xf4, 0xc7, 0x61, 0x6e, 0x64, 0x94, 0xfe, 0x34, 0xbc, 0xca, 0x80, 0xc2, 0xc4, 0x17, 0x37,
	0x7c, 0x0c, 0x2e, 0x39, 0xb8, 0x6b, 0x21, 0xc7, 0x09, 0xad, 0x20, 0xc4, 0x6d, 0xf2, 0x04, 0xa7,
	0x35, 0x37, 0x75, 0x6d, 0xbe, 0xb6, 0x9e, 0x06, 0xf5, 0xdf, 0x7e, 0xe5, 0xa6, 0x4b, 0x0d, 0xd6,
	0xc1, 0xac, 0x43, 0x7c, 0x37, 0x32, 0x7c, 0x01, 0xaf, 0x4e, 0xfe, 0xd1, 0x75, 0x57, 0xaa, 0xc1,
	0x9e, 0x5b, 0x65, 0x4f, 0x03, 0x1c, 0x19, 0x6b, 0xb8, 0xbb, 0xea, 0x38, 0xe1, 0x36, 0xa7, 0x33,
	0x4b, 0xce, 0xf8, 0x10, 0x47, 0xd0, 0x04, 0x8b, 0x0e, 0x76, 0xe2, 0x83, 0x13, 0x6d, 0xf5, 0x88,
	0xef, 0xd0, 0xde, 0xe9, 0x8d, 0x34, 0xcb, 0x9b, 0xe7, 0xc2, 0x04, 0xf8, 0xcf, 0x1c, 0x0b, 0xef,
	0x80, 0x92, 0x4d, 0xa9, 0xe7, 0xd0, 0xde, 0x01, 0xdd, 0xd4, 0xd9, 0xe8, 0x8a, 0x23, 0x9c, 0x60,
	0xda, 0xc8, 0xe6, 0xa6, 0xca, 0xd9, 0x8d, 0x6c, 0x6e, 0xba, 0x3c, 0xb3, 0x91, 0xcd, 0xcd, 0x94,
	0x67, 0x37, 0xb2, 0xb9, 0xd9, 0x72, 0x4e, 0xcc, 0xd7, 0x5e, 0xab, 0x1f, 0x06, 0xba, 0xfa, 0x71,
	0xa0, 0xab, 0x9f, 0x06, 0xba, 0xf2, 0x79, 0xa0, 0x2b, 0x5f, 0x06, 0xba, 0xf2, 0x75, 0xa0, 0x2b,
	0xdf, 0x06, 0xba, 0xfa, 0x3c, 0xd1, 0xd5, 0x17, 0x89, 0xae, 0xbc, 0x49, 0x74, 0xf5, 0x6d, 0xa2,
	0x2b, 0xef, 0x12, 0x5d, 0x79, 0x9f, 0xe8, 0xca, 0x87, 0x44, 0x57, 0x3f, 0x26, 0xba, 0xfa, 0x29,
	0xd1, 0x95, 0xcf, 0x89, 0xae, 0x7e, 0x49, 0x74, 0xe5, 0x6b, 0xa2, 0xab, 0xdf, 0x12, 0x5d, 0x79,
	0x3e, 0xd4, 0x95, 0x17, 0x43, 0x5d, 0xfd, 0xfb, 0x50, 0x57, 0x5e, 0x0e, 0x75, 0xf5, 0xd5, 0x50,
	0x57, 0xde, 0x0c, 0x75, 0xe5, 0xed, 0x50, 0x57, 0xdf, 0x0d, 0x75, 0xf5, 0xfd, 0x50, 0x57, 0x1f,
	0x56, 0x7f, 0x42, 0x0a, 0x18, 0x09, 0x5a, 0xad, 0x19, 0x1e, 0xee, 0xca, 0x8f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xa6, 0xe2, 0xa8, 0x91, 0x79, 0x0f, 0x00, 0x00,
}

func (this *Configuration) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration)
	if !ok {
		that2, ok := that.(Configuration)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DefaultCluster.Equal(that1.DefaultCluster) {
		return false
	}
	return true
}
func (this *Configuration_UI) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_UI)
	if !ok {
		that2, ok := that.(Configuration_UI)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BrandingBaseURL != that1.BrandingBaseURL {
		return false
	}
	return true
}
func (this *Configuration_Cluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster)
	if !ok {
		that2, ok := that.(Configuration_Cluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UI.Equal(that1.UI) {
		return false
	}
	if !this.IS.Equal(that1.IS) {
		return false
	}
	if !this.NS.Equal(that1.NS) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UserRegistration.Equal(that1.UserRegistration) {
		return false
	}
	if !this.ProfilePicture.Equal(that1.ProfilePicture) {
		return false
	}
	if !this.EndDevicePicture.Equal(that1.EndDevicePicture) {
		return false
	}
	if !this.UserRights.Equal(that1.UserRights) {
		return false
	}
	if !this.OAuth.Equal(that1.OAuth) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_UserRegistration)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_UserRegistration)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Invitation.Equal(that1.Invitation) {
		return false
	}
	if !this.ContactInfoValidation.Equal(that1.ContactInfoValidation) {
		return false
	}
	if !this.AdminApproval.Equal(that1.AdminApproval) {
		return false
	}
	if !this.PasswordRequirements.Equal(that1.PasswordRequirements) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_UserRegistration_Invitation)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_UserRegistration_Invitation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Required.Equal(that1.Required) {
		return false
	}
	if this.TokenTTL != nil && that1.TokenTTL != nil {
		if *this.TokenTTL != *that1.TokenTTL {
			return false
		}
	} else if this.TokenTTL != nil {
		return false
	} else if that1.TokenTTL != nil {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Required.Equal(that1.Required) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Required.Equal(that1.Required) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MinLength.Equal(that1.MinLength) {
		return false
	}
	if !this.MaxLength.Equal(that1.MaxLength) {
		return false
	}
	if !this.MinUppercase.Equal(that1.MinUppercase) {
		return false
	}
	if !this.MinDigits.Equal(that1.MinDigits) {
		return false
	}
	if !this.MinSpecial.Equal(that1.MinSpecial) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_ProfilePicture) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_ProfilePicture)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_ProfilePicture)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableUpload.Equal(that1.DisableUpload) {
		return false
	}
	if !this.UseGravatar.Equal(that1.UseGravatar) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_EndDevicePicture) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_EndDevicePicture)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_EndDevicePicture)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableUpload.Equal(that1.DisableUpload) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_UserRights) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_UserRights)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_UserRights)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.CreateApplications.Equal(that1.CreateApplications) {
		return false
	}
	if !this.CreateClients.Equal(that1.CreateClients) {
		return false
	}
	if !this.CreateGateways.Equal(that1.CreateGateways) {
		return false
	}
	if !this.CreateOrganizations.Equal(that1.CreateOrganizations) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_OAuth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_OAuth)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_OAuth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Providers.Equal(that1.Providers) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_OAuth_AuthProviders)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_OAuth_AuthProviders)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OIDC.Equal(that1.OIDC) {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.AllowRegistrations != that1.AllowRegistrations {
		return false
	}
	return true
}
func (this *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect)
	if !ok {
		that2, ok := that.(Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.Equal(&that1.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) {
		return false
	}
	if this.ClientID != that1.ClientID {
		return false
	}
	if this.ClientSecret != that1.ClientSecret {
		return false
	}
	if this.ProviderURL != that1.ProviderURL {
		return false
	}
	return true
}
func (this *Configuration_Cluster_NetworkServer) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Configuration_Cluster_NetworkServer)
	if !ok {
		that2, ok := that.(Configuration_Cluster_NetworkServer)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.DevAddrPrefixes) != len(that1.DevAddrPrefixes) {
		return false
	}
	for i := range this.DevAddrPrefixes {
		if !this.DevAddrPrefixes[i].Equal(that1.DevAddrPrefixes[i]) {
			return false
		}
	}
	if this.DeduplicationWindow != nil && that1.DeduplicationWindow != nil {
		if *this.DeduplicationWindow != *that1.DeduplicationWindow {
			return false
		}
	} else if this.DeduplicationWindow != nil {
		return false
	} else if that1.DeduplicationWindow != nil {
		return false
	}
	if this.CooldownWindow != nil && that1.CooldownWindow != nil {
		if *this.CooldownWindow != *that1.CooldownWindow {
			return false
		}
	} else if this.CooldownWindow != nil {
		return false
	} else if that1.CooldownWindow != nil {
		return false
	}
	return true
}
func (m *Configuration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DefaultCluster != nil {
		{
			size, err := m.DefaultCluster.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_UI) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_UI) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_UI) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BrandingBaseURL) > 0 {
		i -= len(m.BrandingBaseURL)
		copy(dAtA[i:], m.BrandingBaseURL)
		i = encodeVarintConfiguration(dAtA, i, uint64(len(m.BrandingBaseURL)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NS != nil {
		{
			size, err := m.NS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.IS != nil {
		{
			size, err := m.IS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UI != nil {
		{
			size, err := m.UI.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OAuth != nil {
		{
			size, err := m.OAuth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.UserRights != nil {
		{
			size, err := m.UserRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.EndDevicePicture != nil {
		{
			size, err := m.EndDevicePicture.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ProfilePicture != nil {
		{
			size, err := m.ProfilePicture.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.UserRegistration != nil {
		{
			size, err := m.UserRegistration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PasswordRequirements != nil {
		{
			size, err := m.PasswordRequirements.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.AdminApproval != nil {
		{
			size, err := m.AdminApproval.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ContactInfoValidation != nil {
		{
			size, err := m.ContactInfoValidation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Invitation != nil {
		{
			size, err := m.Invitation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TokenTTL != nil {
		n14, err14 := github_com_gogo_protobuf_types.StdDurationMarshalTo(*m.TokenTTL, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(*m.TokenTTL):])
		if err14 != nil {
			return 0, err14
		}
		i -= n14
		i = encodeVarintConfiguration(dAtA, i, uint64(n14))
		i--
		dAtA[i] = 0x12
	}
	if m.Required != nil {
		{
			size, err := m.Required.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Required != nil {
		{
			size, err := m.Required.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Required != nil {
		{
			size, err := m.Required.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinSpecial != nil {
		{
			size, err := m.MinSpecial.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.MinDigits != nil {
		{
			size, err := m.MinDigits.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.MinUppercase != nil {
		{
			size, err := m.MinUppercase.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.MaxLength != nil {
		{
			size, err := m.MaxLength.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.MinLength != nil {
		{
			size, err := m.MinLength.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UseGravatar != nil {
		{
			size, err := m.UseGravatar.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DisableUpload != nil {
		{
			size, err := m.DisableUpload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DisableUpload != nil {
		{
			size, err := m.DisableUpload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_UserRights) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_UserRights) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_UserRights) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreateOrganizations != nil {
		{
			size, err := m.CreateOrganizations.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CreateGateways != nil {
		{
			size, err := m.CreateGateways.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.CreateClients != nil {
		{
			size, err := m.CreateClients.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CreateApplications != nil {
		{
			size, err := m.CreateApplications.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_OAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Providers != nil {
		{
			size, err := m.Providers.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OIDC != nil {
		{
			size, err := m.OIDC.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AllowRegistrations {
		i--
		if m.AllowRegistrations {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintConfiguration(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProviderURL) > 0 {
		i -= len(m.ProviderURL)
		copy(dAtA[i:], m.ProviderURL)
		i = encodeVarintConfiguration(dAtA, i, uint64(len(m.ProviderURL)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ClientSecret) > 0 {
		i -= len(m.ClientSecret)
		copy(dAtA[i:], m.ClientSecret)
		i = encodeVarintConfiguration(dAtA, i, uint64(len(m.ClientSecret)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClientID) > 0 {
		i -= len(m.ClientID)
		copy(dAtA[i:], m.ClientID)
		i = encodeVarintConfiguration(dAtA, i, uint64(len(m.ClientID)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintConfiguration(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Configuration_Cluster_NetworkServer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration_Cluster_NetworkServer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration_Cluster_NetworkServer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CooldownWindow != nil {
		n33, err33 := github_com_gogo_protobuf_types.StdDurationMarshalTo(*m.CooldownWindow, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(*m.CooldownWindow):])
		if err33 != nil {
			return 0, err33
		}
		i -= n33
		i = encodeVarintConfiguration(dAtA, i, uint64(n33))
		i--
		dAtA[i] = 0x1a
	}
	if m.DeduplicationWindow != nil {
		n34, err34 := github_com_gogo_protobuf_types.StdDurationMarshalTo(*m.DeduplicationWindow, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(*m.DeduplicationWindow):])
		if err34 != nil {
			return 0, err34
		}
		i -= n34
		i = encodeVarintConfiguration(dAtA, i, uint64(n34))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DevAddrPrefixes) > 0 {
		for iNdEx := len(m.DevAddrPrefixes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size := m.DevAddrPrefixes[iNdEx].Size()
				i -= size
				if _, err := m.DevAddrPrefixes[iNdEx].MarshalTo(dAtA[i:]); err != nil {
					return 0, err
				}
				i = encodeVarintConfiguration(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintConfiguration(dAtA []byte, offset int, v uint64) int {
	offset -= sovConfiguration(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedConfiguration(r randyConfiguration, easy bool) *Configuration {
	this := &Configuration{}
	if r.Intn(5) != 0 {
		this.DefaultCluster = NewPopulatedConfiguration_Cluster(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_UI(r randyConfiguration, easy bool) *Configuration_UI {
	this := &Configuration_UI{}
	this.BrandingBaseURL = randStringConfiguration(r)
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster(r randyConfiguration, easy bool) *Configuration_Cluster {
	this := &Configuration_Cluster{}
	if r.Intn(5) != 0 {
		this.UI = NewPopulatedConfiguration_UI(r, easy)
	}
	if r.Intn(5) != 0 {
		this.IS = NewPopulatedConfiguration_Cluster_IdentityServer(r, easy)
	}
	if r.Intn(5) != 0 {
		this.NS = NewPopulatedConfiguration_Cluster_NetworkServer(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer {
	this := &Configuration_Cluster_IdentityServer{}
	if r.Intn(5) != 0 {
		this.UserRegistration = NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration(r, easy)
	}
	if r.Intn(5) != 0 {
		this.ProfilePicture = NewPopulatedConfiguration_Cluster_IdentityServer_ProfilePicture(r, easy)
	}
	if r.Intn(5) != 0 {
		this.EndDevicePicture = NewPopulatedConfiguration_Cluster_IdentityServer_EndDevicePicture(r, easy)
	}
	if r.Intn(5) != 0 {
		this.UserRights = NewPopulatedConfiguration_Cluster_IdentityServer_UserRights(r, easy)
	}
	if r.Intn(5) != 0 {
		this.OAuth = NewPopulatedConfiguration_Cluster_IdentityServer_OAuth(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_UserRegistration {
	this := &Configuration_Cluster_IdentityServer_UserRegistration{}
	if r.Intn(5) != 0 {
		this.Invitation = NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_Invitation(r, easy)
	}
	if r.Intn(5) != 0 {
		this.ContactInfoValidation = NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation(r, easy)
	}
	if r.Intn(5) != 0 {
		this.AdminApproval = NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_AdminApproval(r, easy)
	}
	if r.Intn(5) != 0 {
		this.PasswordRequirements = NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_PasswordRequirements(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_Invitation(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_UserRegistration_Invitation {
	this := &Configuration_Cluster_IdentityServer_UserRegistration_Invitation{}
	if r.Intn(5) != 0 {
		this.Required = types.NewPopulatedBoolValue(r, easy)
	}
	if r.Intn(5) != 0 {
		this.TokenTTL = github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation {
	this := &Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation{}
	if r.Intn(5) != 0 {
		this.Required = types.NewPopulatedBoolValue(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_AdminApproval(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval {
	this := &Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval{}
	if r.Intn(5) != 0 {
		this.Required = types.NewPopulatedBoolValue(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_UserRegistration_PasswordRequirements(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements {
	this := &Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements{}
	if r.Intn(5) != 0 {
		this.MinLength = types.NewPopulatedUInt32Value(r, easy)
	}
	if r.Intn(5) != 0 {
		this.MaxLength = types.NewPopulatedUInt32Value(r, easy)
	}
	if r.Intn(5) != 0 {
		this.MinUppercase = types.NewPopulatedUInt32Value(r, easy)
	}
	if r.Intn(5) != 0 {
		this.MinDigits = types.NewPopulatedUInt32Value(r, easy)
	}
	if r.Intn(5) != 0 {
		this.MinSpecial = types.NewPopulatedUInt32Value(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_ProfilePicture(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_ProfilePicture {
	this := &Configuration_Cluster_IdentityServer_ProfilePicture{}
	if r.Intn(5) != 0 {
		this.DisableUpload = types.NewPopulatedBoolValue(r, easy)
	}
	if r.Intn(5) != 0 {
		this.UseGravatar = types.NewPopulatedBoolValue(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_EndDevicePicture(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_EndDevicePicture {
	this := &Configuration_Cluster_IdentityServer_EndDevicePicture{}
	if r.Intn(5) != 0 {
		this.DisableUpload = types.NewPopulatedBoolValue(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_UserRights(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_UserRights {
	this := &Configuration_Cluster_IdentityServer_UserRights{}
	if r.Intn(5) != 0 {
		this.CreateApplications = types.NewPopulatedBoolValue(r, easy)
	}
	if r.Intn(5) != 0 {
		this.CreateClients = types.NewPopulatedBoolValue(r, easy)
	}
	if r.Intn(5) != 0 {
		this.CreateGateways = types.NewPopulatedBoolValue(r, easy)
	}
	if r.Intn(5) != 0 {
		this.CreateOrganizations = types.NewPopulatedBoolValue(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_OAuth(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_OAuth {
	this := &Configuration_Cluster_IdentityServer_OAuth{}
	if r.Intn(5) != 0 {
		this.Providers = NewPopulatedConfiguration_Cluster_IdentityServer_OAuth_AuthProviders(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_OAuth_AuthProviders(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_OAuth_AuthProviders {
	this := &Configuration_Cluster_IdentityServer_OAuth_AuthProviders{}
	if r.Intn(5) != 0 {
		this.OIDC = NewPopulatedConfiguration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_OAuth_AuthProviders_Shared(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared {
	this := &Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared{}
	this.Name = randStringConfiguration(r)
	this.AllowRegistrations = bool(r.Intn(2) == 0)
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect(r randyConfiguration, easy bool) *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect {
	this := &Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect{}
	v1 := NewPopulatedConfiguration_Cluster_IdentityServer_OAuth_AuthProviders_Shared(r, easy)
	this.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared = *v1
	this.ClientID = randStringConfiguration(r)
	this.ClientSecret = randStringConfiguration(r)
	this.ProviderURL = randStringConfiguration(r)
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedConfiguration_Cluster_NetworkServer(r randyConfiguration, easy bool) *Configuration_Cluster_NetworkServer {
	this := &Configuration_Cluster_NetworkServer{}
	v2 := r.Intn(10)
	this.DevAddrPrefixes = make([]go_thethings_network_lorawan_stack_v3_pkg_types.DevAddrPrefix, v2)
	for i := 0; i < v2; i++ {
		v3 := go_thethings_network_lorawan_stack_v3_pkg_types.NewPopulatedDevAddrPrefix(r)
		this.DevAddrPrefixes[i] = *v3
	}
	if r.Intn(5) != 0 {
		this.DeduplicationWindow = github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	}
	if r.Intn(5) != 0 {
		this.CooldownWindow = github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyConfiguration interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneConfiguration(r randyConfiguration) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringConfiguration(r randyConfiguration) string {
	v4 := r.Intn(100)
	tmps := make([]rune, v4)
	for i := 0; i < v4; i++ {
		tmps[i] = randUTF8RuneConfiguration(r)
	}
	return string(tmps)
}
func randUnrecognizedConfiguration(r randyConfiguration, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldConfiguration(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldConfiguration(dAtA []byte, r randyConfiguration, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateConfiguration(dAtA, uint64(key))
		v5 := r.Int63()
		if r.Intn(2) == 0 {
			v5 *= -1
		}
		dAtA = encodeVarintPopulateConfiguration(dAtA, uint64(v5))
	case 1:
		dAtA = encodeVarintPopulateConfiguration(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateConfiguration(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateConfiguration(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateConfiguration(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateConfiguration(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(v&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *Configuration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DefaultCluster != nil {
		l = m.DefaultCluster.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_UI) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BrandingBaseURL)
	if l > 0 {
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UI != nil {
		l = m.UI.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.IS != nil {
		l = m.IS.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.NS != nil {
		l = m.NS.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserRegistration != nil {
		l = m.UserRegistration.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.ProfilePicture != nil {
		l = m.ProfilePicture.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.EndDevicePicture != nil {
		l = m.EndDevicePicture.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.UserRights != nil {
		l = m.UserRights.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.OAuth != nil {
		l = m.OAuth.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Invitation != nil {
		l = m.Invitation.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.ContactInfoValidation != nil {
		l = m.ContactInfoValidation.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.AdminApproval != nil {
		l = m.AdminApproval.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.PasswordRequirements != nil {
		l = m.PasswordRequirements.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Required != nil {
		l = m.Required.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.TokenTTL != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdDuration(*m.TokenTTL)
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Required != nil {
		l = m.Required.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Required != nil {
		l = m.Required.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MinLength != nil {
		l = m.MinLength.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.MaxLength != nil {
		l = m.MaxLength.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.MinUppercase != nil {
		l = m.MinUppercase.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.MinDigits != nil {
		l = m.MinDigits.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.MinSpecial != nil {
		l = m.MinSpecial.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_ProfilePicture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableUpload != nil {
		l = m.DisableUpload.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.UseGravatar != nil {
		l = m.UseGravatar.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableUpload != nil {
		l = m.DisableUpload.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_UserRights) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreateApplications != nil {
		l = m.CreateApplications.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.CreateClients != nil {
		l = m.CreateClients.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.CreateGateways != nil {
		l = m.CreateGateways.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.CreateOrganizations != nil {
		l = m.CreateOrganizations.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_OAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Providers != nil {
		l = m.Providers.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OIDC != nil {
		l = m.OIDC.Size()
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.AllowRegistrations {
		n += 2
	}
	return n
}

func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.Size()
	n += 1 + l + sovConfiguration(uint64(l))
	l = len(m.ClientID)
	if l > 0 {
		n += 1 + l + sovConfiguration(uint64(l))
	}
	l = len(m.ClientSecret)
	if l > 0 {
		n += 1 + l + sovConfiguration(uint64(l))
	}
	l = len(m.ProviderURL)
	if l > 0 {
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func (m *Configuration_Cluster_NetworkServer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DevAddrPrefixes) > 0 {
		for _, e := range m.DevAddrPrefixes {
			l = e.Size()
			n += 1 + l + sovConfiguration(uint64(l))
		}
	}
	if m.DeduplicationWindow != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdDuration(*m.DeduplicationWindow)
		n += 1 + l + sovConfiguration(uint64(l))
	}
	if m.CooldownWindow != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdDuration(*m.CooldownWindow)
		n += 1 + l + sovConfiguration(uint64(l))
	}
	return n
}

func sovConfiguration(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConfiguration(x uint64) (n int) {
	return sovConfiguration((x << 1) ^ uint64((int64(x) >> 63)))
}
func (this *Configuration) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration{`,
		`DefaultCluster:` + strings.Replace(fmt.Sprintf("%v", this.DefaultCluster), "Configuration_Cluster", "Configuration_Cluster", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_UI) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_UI{`,
		`BrandingBaseURL:` + fmt.Sprintf("%v", this.BrandingBaseURL) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster{`,
		`UI:` + strings.Replace(fmt.Sprintf("%v", this.UI), "Configuration_UI", "Configuration_UI", 1) + `,`,
		`IS:` + strings.Replace(fmt.Sprintf("%v", this.IS), "Configuration_Cluster_IdentityServer", "Configuration_Cluster_IdentityServer", 1) + `,`,
		`NS:` + strings.Replace(fmt.Sprintf("%v", this.NS), "Configuration_Cluster_NetworkServer", "Configuration_Cluster_NetworkServer", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer{`,
		`UserRegistration:` + strings.Replace(fmt.Sprintf("%v", this.UserRegistration), "Configuration_Cluster_IdentityServer_UserRegistration", "Configuration_Cluster_IdentityServer_UserRegistration", 1) + `,`,
		`ProfilePicture:` + strings.Replace(fmt.Sprintf("%v", this.ProfilePicture), "Configuration_Cluster_IdentityServer_ProfilePicture", "Configuration_Cluster_IdentityServer_ProfilePicture", 1) + `,`,
		`EndDevicePicture:` + strings.Replace(fmt.Sprintf("%v", this.EndDevicePicture), "Configuration_Cluster_IdentityServer_EndDevicePicture", "Configuration_Cluster_IdentityServer_EndDevicePicture", 1) + `,`,
		`UserRights:` + strings.Replace(fmt.Sprintf("%v", this.UserRights), "Configuration_Cluster_IdentityServer_UserRights", "Configuration_Cluster_IdentityServer_UserRights", 1) + `,`,
		`OAuth:` + strings.Replace(fmt.Sprintf("%v", this.OAuth), "Configuration_Cluster_IdentityServer_OAuth", "Configuration_Cluster_IdentityServer_OAuth", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_UserRegistration{`,
		`Invitation:` + strings.Replace(fmt.Sprintf("%v", this.Invitation), "Configuration_Cluster_IdentityServer_UserRegistration_Invitation", "Configuration_Cluster_IdentityServer_UserRegistration_Invitation", 1) + `,`,
		`ContactInfoValidation:` + strings.Replace(fmt.Sprintf("%v", this.ContactInfoValidation), "Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation", "Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation", 1) + `,`,
		`AdminApproval:` + strings.Replace(fmt.Sprintf("%v", this.AdminApproval), "Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval", "Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval", 1) + `,`,
		`PasswordRequirements:` + strings.Replace(fmt.Sprintf("%v", this.PasswordRequirements), "Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements", "Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_UserRegistration_Invitation{`,
		`Required:` + strings.Replace(fmt.Sprintf("%v", this.Required), "BoolValue", "types.BoolValue", 1) + `,`,
		`TokenTTL:` + strings.Replace(fmt.Sprintf("%v", this.TokenTTL), "Duration", "types.Duration", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation{`,
		`Required:` + strings.Replace(fmt.Sprintf("%v", this.Required), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval{`,
		`Required:` + strings.Replace(fmt.Sprintf("%v", this.Required), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements{`,
		`MinLength:` + strings.Replace(fmt.Sprintf("%v", this.MinLength), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MaxLength:` + strings.Replace(fmt.Sprintf("%v", this.MaxLength), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MinUppercase:` + strings.Replace(fmt.Sprintf("%v", this.MinUppercase), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MinDigits:` + strings.Replace(fmt.Sprintf("%v", this.MinDigits), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MinSpecial:` + strings.Replace(fmt.Sprintf("%v", this.MinSpecial), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_ProfilePicture) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_ProfilePicture{`,
		`DisableUpload:` + strings.Replace(fmt.Sprintf("%v", this.DisableUpload), "BoolValue", "types.BoolValue", 1) + `,`,
		`UseGravatar:` + strings.Replace(fmt.Sprintf("%v", this.UseGravatar), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_EndDevicePicture) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_EndDevicePicture{`,
		`DisableUpload:` + strings.Replace(fmt.Sprintf("%v", this.DisableUpload), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_UserRights) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_UserRights{`,
		`CreateApplications:` + strings.Replace(fmt.Sprintf("%v", this.CreateApplications), "BoolValue", "types.BoolValue", 1) + `,`,
		`CreateClients:` + strings.Replace(fmt.Sprintf("%v", this.CreateClients), "BoolValue", "types.BoolValue", 1) + `,`,
		`CreateGateways:` + strings.Replace(fmt.Sprintf("%v", this.CreateGateways), "BoolValue", "types.BoolValue", 1) + `,`,
		`CreateOrganizations:` + strings.Replace(fmt.Sprintf("%v", this.CreateOrganizations), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_OAuth) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_OAuth{`,
		`Providers:` + strings.Replace(fmt.Sprintf("%v", this.Providers), "Configuration_Cluster_IdentityServer_OAuth_AuthProviders", "Configuration_Cluster_IdentityServer_OAuth_AuthProviders", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_OAuth_AuthProviders{`,
		`OIDC:` + strings.Replace(fmt.Sprintf("%v", this.OIDC), "Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect", "Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`AllowRegistrations:` + fmt.Sprintf("%v", this.AllowRegistrations) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect{`,
		`Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared), "Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared", "Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared", 1), `&`, ``, 1) + `,`,
		`ClientID:` + fmt.Sprintf("%v", this.ClientID) + `,`,
		`ClientSecret:` + fmt.Sprintf("%v", this.ClientSecret) + `,`,
		`ProviderURL:` + fmt.Sprintf("%v", this.ProviderURL) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Configuration_Cluster_NetworkServer) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Configuration_Cluster_NetworkServer{`,
		`DevAddrPrefixes:` + fmt.Sprintf("%v", this.DevAddrPrefixes) + `,`,
		`DeduplicationWindow:` + strings.Replace(fmt.Sprintf("%v", this.DeduplicationWindow), "Duration", "types.Duration", 1) + `,`,
		`CooldownWindow:` + strings.Replace(fmt.Sprintf("%v", this.CooldownWindow), "Duration", "types.Duration", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringConfiguration(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *Configuration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Configuration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Configuration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DefaultCluster == nil {
				m.DefaultCluster = &Configuration_Cluster{}
			}
			if err := m.DefaultCluster.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_UI) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UI: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UI: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrandingBaseURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BrandingBaseURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Cluster: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Cluster: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UI", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UI == nil {
				m.UI = &Configuration_UI{}
			}
			if err := m.UI.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IS == nil {
				m.IS = &Configuration_Cluster_IdentityServer{}
			}
			if err := m.IS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NS == nil {
				m.NS = &Configuration_Cluster_NetworkServer{}
			}
			if err := m.NS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IdentityServer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IdentityServer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRegistration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserRegistration == nil {
				m.UserRegistration = &Configuration_Cluster_IdentityServer_UserRegistration{}
			}
			if err := m.UserRegistration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfilePicture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProfilePicture == nil {
				m.ProfilePicture = &Configuration_Cluster_IdentityServer_ProfilePicture{}
			}
			if err := m.ProfilePicture.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDevicePicture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDevicePicture == nil {
				m.EndDevicePicture = &Configuration_Cluster_IdentityServer_EndDevicePicture{}
			}
			if err := m.EndDevicePicture.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserRights == nil {
				m.UserRights = &Configuration_Cluster_IdentityServer_UserRights{}
			}
			if err := m.UserRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OAuth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OAuth == nil {
				m.OAuth = &Configuration_Cluster_IdentityServer_OAuth{}
			}
			if err := m.OAuth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserRegistration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserRegistration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Invitation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Invitation == nil {
				m.Invitation = &Configuration_Cluster_IdentityServer_UserRegistration_Invitation{}
			}
			if err := m.Invitation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactInfoValidation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContactInfoValidation == nil {
				m.ContactInfoValidation = &Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation{}
			}
			if err := m.ContactInfoValidation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminApproval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminApproval == nil {
				m.AdminApproval = &Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval{}
			}
			if err := m.AdminApproval.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordRequirements", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PasswordRequirements == nil {
				m.PasswordRequirements = &Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements{}
			}
			if err := m.PasswordRequirements.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_Invitation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Invitation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Invitation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Required", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Required == nil {
				m.Required = &types.BoolValue{}
			}
			if err := m.Required.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenTTL", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TokenTTL == nil {
				m.TokenTTL = new(time.Duration)
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(m.TokenTTL, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_ContactInfoValidation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactInfoValidation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactInfoValidation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Required", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Required == nil {
				m.Required = &types.BoolValue{}
			}
			if err := m.Required.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_AdminApproval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdminApproval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdminApproval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Required", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Required == nil {
				m.Required = &types.BoolValue{}
			}
			if err := m.Required.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_UserRegistration_PasswordRequirements) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PasswordRequirements: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PasswordRequirements: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinLength", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinLength == nil {
				m.MinLength = &types.UInt32Value{}
			}
			if err := m.MinLength.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLength", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxLength == nil {
				m.MaxLength = &types.UInt32Value{}
			}
			if err := m.MaxLength.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinUppercase", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinUppercase == nil {
				m.MinUppercase = &types.UInt32Value{}
			}
			if err := m.MinUppercase.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDigits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinDigits == nil {
				m.MinDigits = &types.UInt32Value{}
			}
			if err := m.MinDigits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSpecial", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinSpecial == nil {
				m.MinSpecial = &types.UInt32Value{}
			}
			if err := m.MinSpecial.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_ProfilePicture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfilePicture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfilePicture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableUpload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisableUpload == nil {
				m.DisableUpload = &types.BoolValue{}
			}
			if err := m.DisableUpload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseGravatar", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UseGravatar == nil {
				m.UseGravatar = &types.BoolValue{}
			}
			if err := m.UseGravatar.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_EndDevicePicture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EndDevicePicture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EndDevicePicture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableUpload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisableUpload == nil {
				m.DisableUpload = &types.BoolValue{}
			}
			if err := m.DisableUpload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_UserRights) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserRights: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserRights: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateApplications", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateApplications == nil {
				m.CreateApplications = &types.BoolValue{}
			}
			if err := m.CreateApplications.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateClients", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateClients == nil {
				m.CreateClients = &types.BoolValue{}
			}
			if err := m.CreateClients.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateGateways", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateGateways == nil {
				m.CreateGateways = &types.BoolValue{}
			}
			if err := m.CreateGateways.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateOrganizations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateOrganizations == nil {
				m.CreateOrganizations = &types.BoolValue{}
			}
			if err := m.CreateOrganizations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_OAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Providers == nil {
				m.Providers = &Configuration_Cluster_IdentityServer_OAuth_AuthProviders{}
			}
			if err := m.Providers.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthProviders: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthProviders: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OIDC", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OIDC == nil {
				m.OIDC = &Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect{}
			}
			if err := m.OIDC.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Shared: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Shared: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowRegistrations", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowRegistrations = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_IdentityServer_OAuth_AuthProviders_OpenIDConnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenIDConnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenIDConnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Configuration_Cluster_IdentityServer_OAuth_AuthProviders_Shared.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Configuration_Cluster_NetworkServer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkServer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkServer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DevAddrPrefixes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v go_thethings_network_lorawan_stack_v3_pkg_types.DevAddrPrefix
			m.DevAddrPrefixes = append(m.DevAddrPrefixes, v)
			if err := m.DevAddrPrefixes[len(m.DevAddrPrefixes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeduplicationWindow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeduplicationWindow == nil {
				m.DeduplicationWindow = new(time.Duration)
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(m.DeduplicationWindow, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CooldownWindow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CooldownWindow == nil {
				m.CooldownWindow = new(time.Duration)
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(m.CooldownWindow, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConfiguration(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConfiguration
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConfiguration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthConfiguration
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupConfiguration
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthConfiguration
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthConfiguration        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConfiguration          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupConfiguration = fmt.Errorf("proto: unexpected end of group")
)
