// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/tti/authentication_provider.proto

package ttipb

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AuthenticationProviderIdentifiers struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticationProviderIdentifiers) Reset()      { *m = AuthenticationProviderIdentifiers{} }
func (*AuthenticationProviderIdentifiers) ProtoMessage() {}
func (*AuthenticationProviderIdentifiers) Descriptor() ([]byte, []int) {
	return fileDescriptor_9683d7d1b5850ad4, []int{0}
}
func (m *AuthenticationProviderIdentifiers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticationProviderIdentifiers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticationProviderIdentifiers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticationProviderIdentifiers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationProviderIdentifiers.Merge(m, src)
}
func (m *AuthenticationProviderIdentifiers) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticationProviderIdentifiers) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationProviderIdentifiers.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationProviderIdentifiers proto.InternalMessageInfo

func (m *AuthenticationProviderIdentifiers) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type AuthenticationProvider struct {
	AuthenticationProviderIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3,embedded=ids" json:"ids"`
	CreatedAt                         time.Time                             `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	UpdatedAt                         time.Time                             `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at"`
	Name                              string                                `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	AllowRegistrations                bool                                  `protobuf:"varint,5,opt,name=allow_registrations,json=allowRegistrations,proto3" json:"allow_registrations,omitempty"`
	Configuration                     *AuthenticationProvider_Configuration `protobuf:"bytes,6,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}                              `json:"-"`
	XXX_sizecache                     int32                                 `json:"-"`
}

func (m *AuthenticationProvider) Reset()      { *m = AuthenticationProvider{} }
func (*AuthenticationProvider) ProtoMessage() {}
func (*AuthenticationProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_9683d7d1b5850ad4, []int{1}
}
func (m *AuthenticationProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticationProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticationProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticationProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationProvider.Merge(m, src)
}
func (m *AuthenticationProvider) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticationProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationProvider.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationProvider proto.InternalMessageInfo

func (m *AuthenticationProvider) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *AuthenticationProvider) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

func (m *AuthenticationProvider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthenticationProvider) GetAllowRegistrations() bool {
	if m != nil {
		return m.AllowRegistrations
	}
	return false
}

func (m *AuthenticationProvider) GetConfiguration() *AuthenticationProvider_Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

type AuthenticationProvider_OIDC struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ProviderURL          string   `protobuf:"bytes,3,opt,name=provider_url,json=providerUrl,proto3" json:"provider_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticationProvider_OIDC) Reset()      { *m = AuthenticationProvider_OIDC{} }
func (*AuthenticationProvider_OIDC) ProtoMessage() {}
func (*AuthenticationProvider_OIDC) Descriptor() ([]byte, []int) {
	return fileDescriptor_9683d7d1b5850ad4, []int{1, 0}
}
func (m *AuthenticationProvider_OIDC) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticationProvider_OIDC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticationProvider_OIDC.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticationProvider_OIDC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationProvider_OIDC.Merge(m, src)
}
func (m *AuthenticationProvider_OIDC) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticationProvider_OIDC) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationProvider_OIDC.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationProvider_OIDC proto.InternalMessageInfo

func (m *AuthenticationProvider_OIDC) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *AuthenticationProvider_OIDC) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *AuthenticationProvider_OIDC) GetProviderURL() string {
	if m != nil {
		return m.ProviderURL
	}
	return ""
}

type AuthenticationProvider_Configuration struct {
	// Types that are valid to be assigned to Provider:
	//	*AuthenticationProvider_Configuration_OIDC
	Provider             isAuthenticationProvider_Configuration_Provider `protobuf_oneof:"provider"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *AuthenticationProvider_Configuration) Reset()      { *m = AuthenticationProvider_Configuration{} }
func (*AuthenticationProvider_Configuration) ProtoMessage() {}
func (*AuthenticationProvider_Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_9683d7d1b5850ad4, []int{1, 1}
}
func (m *AuthenticationProvider_Configuration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticationProvider_Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticationProvider_Configuration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticationProvider_Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationProvider_Configuration.Merge(m, src)
}
func (m *AuthenticationProvider_Configuration) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticationProvider_Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationProvider_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationProvider_Configuration proto.InternalMessageInfo

type isAuthenticationProvider_Configuration_Provider interface {
	isAuthenticationProvider_Configuration_Provider()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AuthenticationProvider_Configuration_OIDC struct {
	OIDC *AuthenticationProvider_OIDC `protobuf:"bytes,1,opt,name=oidc,proto3,oneof" json:"oidc,omitempty"`
}

func (*AuthenticationProvider_Configuration_OIDC) isAuthenticationProvider_Configuration_Provider() {}

func (m *AuthenticationProvider_Configuration) GetProvider() isAuthenticationProvider_Configuration_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *AuthenticationProvider_Configuration) GetOIDC() *AuthenticationProvider_OIDC {
	if x, ok := m.GetProvider().(*AuthenticationProvider_Configuration_OIDC); ok {
		return x.OIDC
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AuthenticationProvider_Configuration) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AuthenticationProvider_Configuration_OIDC)(nil),
	}
}

func init() {
	proto.RegisterType((*AuthenticationProviderIdentifiers)(nil), "tti.lorawan.v3.AuthenticationProviderIdentifiers")
	golang_proto.RegisterType((*AuthenticationProviderIdentifiers)(nil), "tti.lorawan.v3.AuthenticationProviderIdentifiers")
	proto.RegisterType((*AuthenticationProvider)(nil), "tti.lorawan.v3.AuthenticationProvider")
	golang_proto.RegisterType((*AuthenticationProvider)(nil), "tti.lorawan.v3.AuthenticationProvider")
	proto.RegisterType((*AuthenticationProvider_OIDC)(nil), "tti.lorawan.v3.AuthenticationProvider.OIDC")
	golang_proto.RegisterType((*AuthenticationProvider_OIDC)(nil), "tti.lorawan.v3.AuthenticationProvider.OIDC")
	proto.RegisterType((*AuthenticationProvider_Configuration)(nil), "tti.lorawan.v3.AuthenticationProvider.Configuration")
	golang_proto.RegisterType((*AuthenticationProvider_Configuration)(nil), "tti.lorawan.v3.AuthenticationProvider.Configuration")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/tti/authentication_provider.proto", fileDescriptor_9683d7d1b5850ad4)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/tti/authentication_provider.proto", fileDescriptor_9683d7d1b5850ad4)
}

var fileDescriptor_9683d7d1b5850ad4 = []byte{
	// 718 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x31, 0x6c, 0xeb, 0x44,
	0x18, 0xbe, 0x6b, 0x92, 0x47, 0x72, 0x4d, 0xa1, 0x32, 0x12, 0x44, 0x41, 0x3a, 0x3f, 0xaa, 0x0e,
	0x7d, 0x82, 0xd8, 0x90, 0xf0, 0x06, 0xde, 0x52, 0xc5, 0xe9, 0x40, 0x04, 0x12, 0xc8, 0x50, 0x86,
	0x56, 0x25, 0x72, 0xec, 0xab, 0x73, 0xaa, 0xe3, 0xb3, 0xce, 0x97, 0x94, 0x52, 0x21, 0x75, 0xac,
	0x98, 0x3a, 0x32, 0x32, 0x80, 0xd4, 0xb1, 0x63, 0xd9, 0x3a, 0x76, 0xec, 0xd8, 0x29, 0x34, 0xe7,
	0xa5, 0x63, 0xc7, 0x2a, 0x13, 0xca, 0x39, 0x49, 0x13, 0x81, 0x44, 0xd9, 0xee, 0xff, 0xef, 0xfb,
	0xbe, 0xff, 0xbe, 0x4f, 0xbf, 0x0e, 0xd5, 0x02, 0xc6, 0x9d, 0x43, 0x27, 0xac, 0xc4, 0xc2, 0x71,
	0x0f, 0x4c, 0x27, 0xa2, 0xa6, 0x10, 0xd4, 0x74, 0x7a, 0xa2, 0x43, 0x42, 0x41, 0x5d, 0x47, 0x50,
	0x16, 0xb6, 0x22, 0xce, 0xfa, 0xd4, 0x23, 0xdc, 0x88, 0x38, 0x13, 0x4c, 0x7b, 0x5b, 0x08, 0x6a,
	0x4c, 0x88, 0x46, 0xbf, 0x56, 0xae, 0xfb, 0x54, 0x74, 0x7a, 0x6d, 0xc3, 0x65, 0x5d, 0x93, 0x84,
	0x7d, 0x76, 0x14, 0x71, 0xf6, 0xe3, 0x91, 0xa9, 0xc0, 0x6e, 0xc5, 0x27, 0x61, 0xa5, 0xef, 0x04,
	0xd4, 0x73, 0x04, 0x31, 0xff, 0x71, 0x48, 0x25, 0xcb, 0x95, 0x39, 0x09, 0x9f, 0xf9, 0x2c, 0x25,
	0xb7, 0x7b, 0xfb, 0xaa, 0x52, 0x85, 0x3a, 0x4d, 0xe0, 0xba, 0xcf, 0x98, 0x1f, 0x90, 0x27, 0x94,
	0xa0, 0x5d, 0x12, 0x0b, 0xa7, 0x1b, 0xa5, 0x80, 0xb5, 0x63, 0xf4, 0x61, 0x7d, 0xc1, 0xc3, 0x37,
	0x13, 0x0b, 0x4d, 0x6f, 0xdc, 0xdb, 0xa7, 0x84, 0xc7, 0xda, 0xf7, 0x68, 0x79, 0xea, 0xac, 0x45,
	0xbd, 0x12, 0x7c, 0x09, 0x37, 0x0a, 0xd6, 0xeb, 0x91, 0xb5, 0xce, 0xd7, 0x4a, 0xeb, 0x55, 0xfc,
	0xc3, 0xae, 0x53, 0xf9, 0xe9, 0x93, 0xca, 0xe7, 0x7b, 0x1b, 0x9b, 0x6f, 0x76, 0x2b, 0x7b, 0x9b,
	0xd3, 0xf2, 0xd5, 0x71, 0xf5, 0xe3, 0x9f, 0xd7, 0xe5, 0x40, 0x47, 0x33, 0xd1, 0x2d, 0x1b, 0x45,
	0xb3, 0x01, 0x6b, 0x7f, 0xe6, 0xd0, 0x7b, 0xff, 0x3e, 0x5d, 0xdb, 0x46, 0x19, 0xea, 0xc5, 0x6a,
	0xd4, 0x72, 0xf5, 0x53, 0x63, 0x31, 0x48, 0xe3, 0x3f, 0x9f, 0x6c, 0xad, 0x8e, 0xac, 0xdc, 0x2f,
	0x70, 0x69, 0x15, 0x5e, 0x0f, 0x74, 0x70, 0x33, 0xd0, 0xa1, 0x3d, 0xd6, 0xd3, 0x1a, 0x08, 0xb9,
	0x9c, 0x38, 0x82, 0x78, 0x2d, 0x47, 0x94, 0x96, 0x94, 0x7a, 0xd9, 0x48, 0x43, 0x32, 0xa6, 0x21,
	0x19, 0xdf, 0x4d, 0x43, 0xb2, 0xf2, 0x63, 0xfa, 0xd9, 0x5f, 0x3a, 0xb4, 0x0b, 0x13, 0x5e, 0x5d,
	0x8c, 0x45, 0x7a, 0x91, 0x37, 0x15, 0xc9, 0xfc, 0x1f, 0x91, 0x09, 0xaf, 0x2e, 0xb4, 0x0f, 0x50,
	0x36, 0x74, 0xba, 0xa4, 0x94, 0x55, 0x61, 0xbe, 0x35, 0xb2, 0xb2, 0x7c, 0xa9, 0x54, 0xb5, 0x55,
	0x53, 0x33, 0xd1, 0xbb, 0x4e, 0x10, 0xb0, 0xc3, 0x16, 0x27, 0x3e, 0x8d, 0x05, 0x57, 0x36, 0xe3,
	0x52, 0xee, 0x25, 0xdc, 0xc8, 0xdb, 0x9a, 0xba, 0xb2, 0xe7, 0x6f, 0xb4, 0x1d, 0xb4, 0xe2, 0xb2,
	0x70, 0x9f, 0xfa, 0xbd, 0xb4, 0x53, 0x7a, 0xa1, 0x5e, 0xf5, 0xd9, 0xf3, 0x82, 0x33, 0x1a, 0xf3,
	0x5c, 0x7b, 0x51, 0xaa, 0xfc, 0x3b, 0x44, 0xd9, 0xaf, 0x9b, 0x5b, 0x0d, 0xed, 0x15, 0x2a, 0xb8,
	0x01, 0x25, 0xa1, 0x78, 0x5a, 0x82, 0xa2, 0x1c, 0xe8, 0xf9, 0x86, 0x6a, 0x36, 0xb7, 0xec, 0x7c,
	0x7a, 0xdd, 0xf4, 0xb4, 0xd7, 0x68, 0x65, 0x02, 0x8d, 0x89, 0xcb, 0x49, 0x1a, 0x75, 0xc1, 0x5a,
	0x95, 0x03, 0xbd, 0x98, 0xc2, 0xbf, 0x55, 0x7d, 0xbb, 0xe8, 0xce, 0x55, 0xda, 0x1b, 0x54, 0x9c,
	0x2d, 0x5a, 0x8f, 0x07, 0x2a, 0xdb, 0x82, 0xf5, 0xfe, 0xc8, 0xca, 0xf1, 0xcc, 0x29, 0x84, 0x72,
	0xa0, 0x2f, 0x4f, 0xdf, 0xbc, 0x6d, 0x7f, 0x65, 0xcf, 0xb6, 0x72, 0x9b, 0x07, 0xe5, 0x2e, 0x5a,
	0x59, 0xb0, 0xa1, 0x7d, 0x89, 0xb2, 0x8c, 0x7a, 0xee, 0x64, 0x87, 0x3e, 0x7a, 0x66, 0x14, 0x63,
	0xa7, 0x56, 0x5e, 0x0e, 0x74, 0xe5, 0xf9, 0x0b, 0x60, 0x2b, 0x11, 0xeb, 0x1d, 0x94, 0x9f, 0x0e,
	0xd3, 0x32, 0x8f, 0x16, 0xb4, 0xfe, 0x80, 0xd7, 0x43, 0x0c, 0x6f, 0x86, 0x18, 0xde, 0x0e, 0x31,
	0xb8, 0x1b, 0x62, 0x70, 0x3f, 0xc4, 0xe0, 0x61, 0x88, 0xc1, 0xe3, 0x10, 0xc3, 0x13, 0x89, 0xe1,
	0xa9, 0xc4, 0xe0, 0x5c, 0x62, 0x78, 0x21, 0x31, 0xb8, 0x94, 0x18, 0x5c, 0x49, 0x0c, 0xae, 0x25,
	0x86, 0x37, 0x12, 0xc3, 0x5b, 0x89, 0xc1, 0x9d, 0xc4, 0xf0, 0x5e, 0x62, 0xf0, 0x20, 0x31, 0x7c,
	0x94, 0x18, 0x9c, 0x24, 0x18, 0x9c, 0x26, 0x18, 0x9e, 0x25, 0x18, 0xfc, 0x9a, 0x60, 0xf8, 0x5b,
	0x82, 0xc1, 0x79, 0x82, 0xc1, 0x45, 0x82, 0xe1, 0x65, 0x82, 0xe1, 0x55, 0x82, 0xe1, 0x8e, 0xe9,
	0x33, 0x43, 0x74, 0x88, 0xe8, 0xd0, 0xd0, 0x8f, 0x8d, 0x90, 0x88, 0x43, 0xc6, 0x0f, 0xcc, 0xc5,
	0xcf, 0xa9, 0x5f, 0x33, 0xa3, 0x03, 0x7f, 0xfc, 0x3f, 0x45, 0xed, 0xf6, 0x0b, 0xb5, 0x90, 0xb5,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x16, 0x24, 0x6e, 0x51, 0xc1, 0x04, 0x00, 0x00,
}

func (this *AuthenticationProviderIdentifiers) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthenticationProviderIdentifiers)
	if !ok {
		that2, ok := that.(AuthenticationProviderIdentifiers)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ProviderID != that1.ProviderID {
		return false
	}
	return true
}
func (this *AuthenticationProvider) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthenticationProvider)
	if !ok {
		that2, ok := that.(AuthenticationProvider)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AuthenticationProviderIdentifiers.Equal(&that1.AuthenticationProviderIdentifiers) {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.UpdatedAt.Equal(that1.UpdatedAt) {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.AllowRegistrations != that1.AllowRegistrations {
		return false
	}
	if !this.Configuration.Equal(that1.Configuration) {
		return false
	}
	return true
}
func (this *AuthenticationProvider_OIDC) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthenticationProvider_OIDC)
	if !ok {
		that2, ok := that.(AuthenticationProvider_OIDC)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientID != that1.ClientID {
		return false
	}
	if this.ClientSecret != that1.ClientSecret {
		return false
	}
	if this.ProviderURL != that1.ProviderURL {
		return false
	}
	return true
}
func (this *AuthenticationProvider_Configuration) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthenticationProvider_Configuration)
	if !ok {
		that2, ok := that.(AuthenticationProvider_Configuration)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Provider == nil {
		if this.Provider != nil {
			return false
		}
	} else if this.Provider == nil {
		return false
	} else if !this.Provider.Equal(that1.Provider) {
		return false
	}
	return true
}
func (this *AuthenticationProvider_Configuration_OIDC) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthenticationProvider_Configuration_OIDC)
	if !ok {
		that2, ok := that.(AuthenticationProvider_Configuration_OIDC)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OIDC.Equal(that1.OIDC) {
		return false
	}
	return true
}
func (m *AuthenticationProviderIdentifiers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticationProviderIdentifiers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticationProviderIdentifiers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProviderID) > 0 {
		i -= len(m.ProviderID)
		copy(dAtA[i:], m.ProviderID)
		i = encodeVarintAuthenticationProvider(dAtA, i, uint64(len(m.ProviderID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuthenticationProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticationProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticationProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Configuration != nil {
		{
			size, err := m.Configuration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthenticationProvider(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.AllowRegistrations {
		i--
		if m.AllowRegistrations {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintAuthenticationProvider(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintAuthenticationProvider(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintAuthenticationProvider(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x12
	{
		size, err := m.AuthenticationProviderIdentifiers.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintAuthenticationProvider(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthenticationProvider_OIDC) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticationProvider_OIDC) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticationProvider_OIDC) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProviderURL) > 0 {
		i -= len(m.ProviderURL)
		copy(dAtA[i:], m.ProviderURL)
		i = encodeVarintAuthenticationProvider(dAtA, i, uint64(len(m.ProviderURL)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClientSecret) > 0 {
		i -= len(m.ClientSecret)
		copy(dAtA[i:], m.ClientSecret)
		i = encodeVarintAuthenticationProvider(dAtA, i, uint64(len(m.ClientSecret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientID) > 0 {
		i -= len(m.ClientID)
		copy(dAtA[i:], m.ClientID)
		i = encodeVarintAuthenticationProvider(dAtA, i, uint64(len(m.ClientID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuthenticationProvider_Configuration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticationProvider_Configuration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticationProvider_Configuration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Provider != nil {
		{
			size := m.Provider.Size()
			i -= size
			if _, err := m.Provider.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *AuthenticationProvider_Configuration_OIDC) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticationProvider_Configuration_OIDC) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OIDC != nil {
		{
			size, err := m.OIDC.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthenticationProvider(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func encodeVarintAuthenticationProvider(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuthenticationProvider(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedAuthenticationProviderIdentifiers(r randyAuthenticationProvider, easy bool) *AuthenticationProviderIdentifiers {
	this := &AuthenticationProviderIdentifiers{}
	this.ProviderID = randStringAuthenticationProvider(r)
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedAuthenticationProvider(r randyAuthenticationProvider, easy bool) *AuthenticationProvider {
	this := &AuthenticationProvider{}
	v1 := NewPopulatedAuthenticationProviderIdentifiers(r, easy)
	this.AuthenticationProviderIdentifiers = *v1
	v2 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.CreatedAt = *v2
	v3 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.UpdatedAt = *v3
	this.Name = randStringAuthenticationProvider(r)
	this.AllowRegistrations = bool(r.Intn(2) == 0)
	if r.Intn(5) != 0 {
		this.Configuration = NewPopulatedAuthenticationProvider_Configuration(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedAuthenticationProvider_OIDC(r randyAuthenticationProvider, easy bool) *AuthenticationProvider_OIDC {
	this := &AuthenticationProvider_OIDC{}
	this.ClientID = randStringAuthenticationProvider(r)
	this.ClientSecret = randStringAuthenticationProvider(r)
	this.ProviderURL = randStringAuthenticationProvider(r)
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedAuthenticationProvider_Configuration(r randyAuthenticationProvider, easy bool) *AuthenticationProvider_Configuration {
	this := &AuthenticationProvider_Configuration{}
	oneofNumber_Provider := []int32{1}[r.Intn(1)]
	switch oneofNumber_Provider {
	case 1:
		this.Provider = NewPopulatedAuthenticationProvider_Configuration_OIDC(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedAuthenticationProvider_Configuration_OIDC(r randyAuthenticationProvider, easy bool) *AuthenticationProvider_Configuration_OIDC {
	this := &AuthenticationProvider_Configuration_OIDC{}
	this.OIDC = NewPopulatedAuthenticationProvider_OIDC(r, easy)
	return this
}

type randyAuthenticationProvider interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneAuthenticationProvider(r randyAuthenticationProvider) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringAuthenticationProvider(r randyAuthenticationProvider) string {
	v4 := r.Intn(100)
	tmps := make([]rune, v4)
	for i := 0; i < v4; i++ {
		tmps[i] = randUTF8RuneAuthenticationProvider(r)
	}
	return string(tmps)
}
func randUnrecognizedAuthenticationProvider(r randyAuthenticationProvider, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldAuthenticationProvider(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldAuthenticationProvider(dAtA []byte, r randyAuthenticationProvider, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateAuthenticationProvider(dAtA, uint64(key))
		v5 := r.Int63()
		if r.Intn(2) == 0 {
			v5 *= -1
		}
		dAtA = encodeVarintPopulateAuthenticationProvider(dAtA, uint64(v5))
	case 1:
		dAtA = encodeVarintPopulateAuthenticationProvider(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateAuthenticationProvider(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateAuthenticationProvider(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateAuthenticationProvider(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateAuthenticationProvider(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(v&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *AuthenticationProviderIdentifiers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProviderID)
	if l > 0 {
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	return n
}

func (m *AuthenticationProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AuthenticationProviderIdentifiers.Size()
	n += 1 + l + sovAuthenticationProvider(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovAuthenticationProvider(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovAuthenticationProvider(uint64(l))
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	if m.AllowRegistrations {
		n += 2
	}
	if m.Configuration != nil {
		l = m.Configuration.Size()
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	return n
}

func (m *AuthenticationProvider_OIDC) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientID)
	if l > 0 {
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	l = len(m.ClientSecret)
	if l > 0 {
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	l = len(m.ProviderURL)
	if l > 0 {
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	return n
}

func (m *AuthenticationProvider_Configuration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Provider != nil {
		n += m.Provider.Size()
	}
	return n
}

func (m *AuthenticationProvider_Configuration_OIDC) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OIDC != nil {
		l = m.OIDC.Size()
		n += 1 + l + sovAuthenticationProvider(uint64(l))
	}
	return n
}

func sovAuthenticationProvider(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuthenticationProvider(x uint64) (n int) {
	return sovAuthenticationProvider((x << 1) ^ uint64((int64(x) >> 63)))
}
func (this *AuthenticationProviderIdentifiers) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthenticationProviderIdentifiers{`,
		`ProviderID:` + fmt.Sprintf("%v", this.ProviderID) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthenticationProvider) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthenticationProvider{`,
		`AuthenticationProviderIdentifiers:` + strings.Replace(strings.Replace(this.AuthenticationProviderIdentifiers.String(), "AuthenticationProviderIdentifiers", "AuthenticationProviderIdentifiers", 1), `&`, ``, 1) + `,`,
		`CreatedAt:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`UpdatedAt:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.UpdatedAt), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`AllowRegistrations:` + fmt.Sprintf("%v", this.AllowRegistrations) + `,`,
		`Configuration:` + strings.Replace(fmt.Sprintf("%v", this.Configuration), "AuthenticationProvider_Configuration", "AuthenticationProvider_Configuration", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthenticationProvider_OIDC) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthenticationProvider_OIDC{`,
		`ClientID:` + fmt.Sprintf("%v", this.ClientID) + `,`,
		`ClientSecret:` + fmt.Sprintf("%v", this.ClientSecret) + `,`,
		`ProviderURL:` + fmt.Sprintf("%v", this.ProviderURL) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthenticationProvider_Configuration) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthenticationProvider_Configuration{`,
		`Provider:` + fmt.Sprintf("%v", this.Provider) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthenticationProvider_Configuration_OIDC) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthenticationProvider_Configuration_OIDC{`,
		`OIDC:` + strings.Replace(fmt.Sprintf("%v", this.OIDC), "AuthenticationProvider_OIDC", "AuthenticationProvider_OIDC", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAuthenticationProvider(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *AuthenticationProviderIdentifiers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthenticationProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthenticationProviderIdentifiers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthenticationProviderIdentifiers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthenticationProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthenticationProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthenticationProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthenticationProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthenticationProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthenticationProviderIdentifiers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AuthenticationProviderIdentifiers.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowRegistrations", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowRegistrations = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Configuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Configuration == nil {
				m.Configuration = &AuthenticationProvider_Configuration{}
			}
			if err := m.Configuration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthenticationProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthenticationProvider_OIDC) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthenticationProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OIDC: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OIDC: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthenticationProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthenticationProvider_Configuration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthenticationProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Configuration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Configuration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OIDC", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AuthenticationProvider_OIDC{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Provider = &AuthenticationProvider_Configuration_OIDC{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthenticationProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuthenticationProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuthenticationProvider(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuthenticationProvider
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthenticationProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuthenticationProvider
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuthenticationProvider
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuthenticationProvider
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuthenticationProvider        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuthenticationProvider          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuthenticationProvider = fmt.Errorf("proto: unexpected end of group")
)
