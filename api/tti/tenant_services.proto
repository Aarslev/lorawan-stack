// Copyright Â© 2019 The Things Industries B.V.

syntax = "proto3";

package tti.lorawan.v3;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "lorawan-stack/api/tti/identifiers.proto";
import "lorawan-stack/api/tti/tenant.proto";

option go_package = "go.thethings.network/lorawan-stack/pkg/ttipb";

message GetTenantIdentifiersForEndDeviceEUIsRequest {
  bytes join_eui = 1 [(gogoproto.customtype) = "go.thethings.network/lorawan-stack/pkg/types.EUI64", (gogoproto.nullable) = false, (gogoproto.customname) = "JoinEUI"];
  bytes dev_eui = 2 [(gogoproto.customtype) = "go.thethings.network/lorawan-stack/pkg/types.EUI64", (gogoproto.nullable) = false, (gogoproto.customname) = "DevEUI"];
}

message GetTenantIdentifiersForGatewayEUIRequest {
  bytes eui = 1 [(gogoproto.customtype) = "go.thethings.network/lorawan-stack/pkg/types.EUI64", (gogoproto.nullable) = false, (gogoproto.customname) = "EUI"];
}

service TenantRegistry {
  rpc Create(CreateTenantRequest) returns (Tenant) {
    option (google.api.http) = {
      post: "/tenants"
      body: "*"
    };
  };
  rpc Get(GetTenantRequest) returns (Tenant) {
    option (google.api.http) = {
      get: "/tenants/{tenant_ids.tenant_id}"
    };
  };
  rpc List(ListTenantsRequest) returns (Tenants) {
    option (google.api.http) = {
      get: "/tenants"
    };
  };
  rpc Update(UpdateTenantRequest) returns (Tenant) {
    option (google.api.http) = {
      put: "/tenants/{tenant.ids.tenant_id}"
      body: "*"
    };
  };
  rpc Delete(TenantIdentifiers) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/tenants/{tenant_id}"
    };
  };

  rpc GetIdentifiersForEndDeviceEUIs(GetTenantIdentifiersForEndDeviceEUIsRequest) returns (TenantIdentifiers);
  rpc GetIdentifiersForGatewayEUI(GetTenantIdentifiersForGatewayEUIRequest) returns (TenantIdentifiers);
}
